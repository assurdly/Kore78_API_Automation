{
	"info": {
		"_postman_id": "72fb4b73-8e44-4aac-a4b7-e01fb2680f08",
		"name": "Kore 78 New",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "api",
			"item": [
				{
					"name": "v1",
					"item": [
						{
							"name": "Admin Operations",
							"item": [
								{
									"name": "countries",
									"item": [
										{
											"name": "Get all countries",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ed72e51b-959d-4ea4-8b8c-f96b12fabbb9",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"Response code is 200 (OK)\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"pm.test(\"Response structure and properties for 200\", function () {",
															"    pm.expect(pm.response.json()).to.have.property(\"code\", \"00\");",
															"    pm.expect(pm.response.json()).to.have.property(\"success\", true);",
															"    ",
															"});",
															"pm.test(\"Country details are returned\", function () {",
															"    pm.expect(jsonData.data).to.be.an('array')",
															"    pm.expect(jsonData.data[0].id).is.not.null;",
															"    pm.expect(jsonData.data[0].name).is.not.null;",
															"    pm.expect(jsonData.data[0].countryCodeTwo).is.not.null;",
															"    pm.expect(jsonData.data[0].countryCodeThree).is.not.null;  ",
															"});",
															"    "
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d5557919-d3b2-4b7d-b65d-ec97de0170fc",
														"exec": [
															"pm.environment.set('baseUrl', 'https://kore78-dev.bank78.co')"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "a501d788-76b9-486c-9af0-895b61b01a4d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-api-key",
														"value": "{{api-key}}",
														"type": "text",
														"disabled": true
													}
												],
												"url": "{{base_Url}}/api/v1/countries/get"
											},
											"response": [
												{
													"id": "677040d9-42af-4b80-bbb7-6a8d3d505340",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": "{{baseUrl}}/api/v1/countries/get"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Add country - country name exists",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dc3fcec4-9fc8-4d6e-bb73-d2c99af77579",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"Response code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"pm.test(\"Error response object is returned\", function () {",
															"    pm.expect(jsonData.success).to.eql(false);",
															"});",
															"",
															"pm.test(\"An error message about the existing country name is returned\", function () {",
															"    pm.expect(jsonData.message).to.eql(\"A country with the name France already exists\");",
															"});",
															"",
															"",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "8df626a2-e6fc-440f-a80f-75be60b3c76e",
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "1bbb8d25-1b6d-4da3-9613-132b5404603e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 1, //this ID should not be part of the request object. It should be generated by the DB.\n  \"name\": \"France\",\n  \"countryCodeTwo\": \"{{$randomCountryCode}}\",\n  \"countryCodeThree\": \"LMO\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/countries/add"
											},
											"response": [
												{
													"id": "bb1590a2-9865-45bb-bf24-1e9d1fff8a18",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"countryCodeTwo\": \"<string>\",\n  \"countryCodeThree\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/countries/add"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Successfully Add Country",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dc3fcec4-9fc8-4d6e-bb73-d2c99af77579",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"Response code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"pm.test(\"Error response object is returned\", function () {",
															"    pm.expect(jsonData.success).to.eql(false);",
															"});",
															"pm.test(\"An error message about the existing country name is returned\", function () {",
															"    pm.expect(jsonData.message).to.eql(\"A country with the name France already exists\");",
															"});",
															"",
															"",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "8df626a2-e6fc-440f-a80f-75be60b3c76e",
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "8e9faf99-73dc-48eb-a9e0-6083e6e9c183",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 1, //this ID should not be part of the request object. It should be generated by the DB.\n  \"name\": \"France\",\n  \"countryCodeTwo\": \"{{$randomCountryCode}}\",\n  \"countryCodeThree\": \"LMO\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/countries/add"
											},
											"response": [
												{
													"id": "28c990f0-9dec-47ec-b4b1-510d3e984142",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"countryCodeTwo\": \"<string>\",\n  \"countryCodeThree\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/countries/add"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Add country - Incorrect name",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dc3fcec4-9fc8-4d6e-bb73-d2c99af77579",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"Response code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"pm.test(\"Error response object is returned\", function () {",
															"    pm.expect(jsonData.success).to.eql(false);",
															"    pm.expect(jsonData.data).to.eql(null);",
															"});",
															"",
															"pm.test(\"An error message about the existing country name is returned\", function () {",
															"    pm.expect(jsonData.message).to.eql(\"The country you have specified could not be found\");",
															"});",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "fbaa1dd9-bf3a-4701-819f-081aaad66564",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 1,\n  \"name\": \"Hawaw\",\n  \"countryCodeTwo\": \"AL\",\n  \"countryCodeThree\": \"ALB\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/countries/add"
											},
											"response": [
												{
													"id": "9a5382e5-dc18-4edd-a307-24d83ab8a349",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"countryCodeTwo\": \"<string>\",\n  \"countryCodeThree\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/countries/add"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Add country - empty country code two",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "05529bc0-6a1b-44de-aea0-850ce2b1cbfd",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"Response code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Error response object is returned\", function () {",
															"    pm.expect(jsonData.success).to.eql(false);",
															"    pm.expect(jsonData.data).to.eql(null);",
															"});",
															"",
															"",
															"pm.test(\"An error message about the invalid country code name is returned\", function () {",
															"    pm.expect(jsonData.message).to.eql(\"Country code ISO2 is required\");",
															"});",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "6a5d9e38-30fa-4b83-ba79-92d9464301f7",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 1,\n  \"name\": \"{{$randomCountry}}\",\n  \"countryCodeTwo\": \"\",\n  \"countryCodeThree\": \"DZA\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/countries/add"
											},
											"response": [
												{
													"id": "8f8d9e9d-61e5-46ca-a38f-eb74fc36c83e",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"countryCodeTwo\": \"<string>\",\n  \"countryCodeThree\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/countries/add"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Add country - empty country code three",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "704c4c20-bb61-46ae-bcd5-ed2e49157dc9",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"Response code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Error response object is returned\", function () {",
															"    pm.expect(jsonData.success).to.eql(false);",
															"    pm.expect(jsonData.data).to.eql(null);",
															"});",
															"",
															"",
															"pm.test(\"An error message about the invalid country code type is returned\", function () {",
															"    pm.expect(jsonData.message).to.eql(\"Country code ISO3 is required\");",
															"});",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "967ae25a-c377-4998-9f7c-b282d0563ea2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 1,\n  \"name\": \"{{$randomCountry}}\",\n  \"countryCodeTwo\": \"{{$randomCountryCode}}\",\n  \"countryCodeThree\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/countries/add"
											},
											"response": [
												{
													"id": "04449965-b189-464e-a90f-6ae7da4008f0",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"countryCodeTwo\": \"<string>\",\n  \"countryCodeThree\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/countries/add"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "12e46656-6ab8-4de0-abf5-cb26668127d4"
								},
								{
									"name": "currencies",
									"item": [
										{
											"name": "Successfully Add currency",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "566a2dd2-28d2-4150-a571-200c376b6a07",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"Response code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"pm.test(\"Response structure and properties for 200\", function () {",
															"    pm.expect(jsonData).to.have.property(\"code\", \"00\");",
															"    pm.expect(jsonData).to.have.property(\"success\", true);",
															"    pm.expect(jsonData.data).to.be.an('object');",
															"});",
															"pm.test(\"A success message about adding a currency is returned\", function () {",
															"    pm.expect(responseBody.message).to.eql(\"Currency added successfully\");",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "6dff14e7-fe1e-4031-8636-a1424d5bc5de",
														"exec": [
															"pm.environment.set('baseUrl', 'https://kore78-dev.bank78.co')"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "8c08c894-8455-4a39-9756-855175e61f17",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Eazy Dollars\",\n  \"shortName\": \"EZD\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/currencies/add"
											},
											"response": [
												{
													"id": "271d5844-d6cc-48d9-a101-ad9255e831ba",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"shortName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/currencies/add"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Add currency - Invalid Name",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "566a2dd2-28d2-4150-a571-200c376b6a07",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"Response code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"pm.test(\"Error response object is returned\", function () {",
															"    pm.expect(jsonData).to.have.property(\"code\", \"400\");",
															"    pm.expect(jsonData).to.have.property(\"success\", false);",
															"    pm.expect(jsonData).to.have.property(\"data\", null);",
															"});",
															"",
															"pm.test(\"Error message about an incorrect currency name is returned\", function () {",
															"    pm.expect(jsonData.message).to.eql(\"Kindly provide a valid currency name\");",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "9aac30ea-361a-4a36-88ac-47b107f6f672",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Benin Naira\",\n  \"shortName\": \"BN\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/currencies/add"
											},
											"response": [
												{
													"id": "4939756f-ba59-45e5-ac42-7cf864310d2e",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"shortName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/currencies/add"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Add currency - Empty Name",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "566a2dd2-28d2-4150-a571-200c376b6a07",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"Response code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"pm.test(\"Error response object is returned\", function () {",
															"    pm.expect(jsonData).to.have.property(\"code\", \"400\");",
															"    pm.expect(jsonData).to.have.property(\"success\", false);",
															"    pm.expect(jsonData).to.have.property(\"data\", null);",
															"});",
															"",
															"pm.test(\"Error message is returned about the required currency name\", function () {",
															"    pm.expect(jsonData.message).to.eql(\"Currency name is required\");",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "62e41f6d-cbe1-46e2-93af-a180b7a22825",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"\",\n  \"shortName\": \"CL\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/currencies/add"
											},
											"response": [
												{
													"id": "8ce80d0a-8cb8-474e-8a04-2b0334bb707a",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"shortName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/currencies/add"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Add currency - Empty shortName",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "566a2dd2-28d2-4150-a571-200c376b6a07",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"Response code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"pm.test(\"Response structure and properties for 400\", function () {",
															"    pm.expect(jsonData).to.have.property(\"code\", \"400\");",
															"    pm.expect(jsonData).to.have.property(\"success\", false);",
															"    pm.expect(jsonData).to.have.property(\"data\", null);",
															"});",
															"",
															"pm.test(\"Error message to confirm missing currency shortname\", function () {",
															"    var responseBody = pm.response.json();",
															"    pm.expect(responseBody.message).to.eql(\"Currency shortname is required\");",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "3b4ec646-de3b-4524-b07a-66968907465e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Ghana Cedis\",\n  \"shortName\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/currencies/add"
											},
											"response": [
												{
													"id": "6c17faf9-ffde-416f-91a2-22f468dc4dac",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"shortName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/currencies/add"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Add currency - Empty fields",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "566a2dd2-28d2-4150-a571-200c376b6a07",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"Response code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"pm.test(\"Response structure and properties for 400\", function () {",
															"    pm.expect(jsonData).to.have.property(\"code\", \"400\");",
															"    pm.expect(jsonData).to.have.property(\"success\", false);",
															"    pm.expect(jsonData).to.have.property(\"data\", null);",
															"});",
															"",
															"",
															"pm.test(\"Error message to confirm empty field\", function () {",
															"    var responseBody = pm.response.json();",
															"    pm.expect(responseBody.message).to.eql(\"Kindly provide values for each required field\");",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "55597d90-0f3f-4254-9c73-12d2adee4738",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"\",\n  \"shortName\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/currencies/add"
											},
											"response": [
												{
													"id": "751c2307-9a34-4e40-88ff-9c56eb4dcd32",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"shortName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/currencies/add"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Get currency",
											"id": "218843fe-f17d-4843-91a5-338ef2f11c78",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "x-api-key",
														"value": "AdminTest",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/currencies/get",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"currencies",
														"get"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": [
												{
													"id": "498a334b-ce22-478f-8a29-66488fabc5bf",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": "{{baseUrl}}/api/v1/currencies/get"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "49c32a41-c4df-4ca3-80f4-ebe7e5945961"
								},
								{
									"name": "organizations",
									"item": [
										{
											"name": "Get organizations",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "72716a24-36e5-42eb-823f-54fce16987df",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"Response code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"pm.test(\"Successful response object is present\", function () {",
															"    pm.expect(jsonData).to.have.property(\"code\", \"00\");",
															"    pm.expect(jsonData).to.have.property(\"success\", true);",
															"});",
															"",
															"pm.test(\"The list of organizations is returned\", function () {",
															"    pm.expect(jsonData.data[0].id).is.not.null;",
															"    pm.expect(jsonData.data[0].name).is.not.empty;",
															"    pm.expect(jsonData.data[0].key).is.not.empty;",
															"    pm.expect(jsonData.data[0].dateCreated).is.not.empty;",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "99c37752-d609-4476-97c3-0275bd32c010",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"url": "{{baseUrl}}/api/v1/organizations/get"
											},
											"response": [
												{
													"id": "e0e71b22-95e0-4d64-9b50-31c8e8bc7b76",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": "{{baseUrl}}/api/v1/organizations/get"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Add organization - Users",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1ad3b2c8-8f34-4e29-9db4-0c50ea9dcd0d",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"Response code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"pm.test(\"Response structure and properties for 200\", function () {",
															"    pm.expect(jsonData).to.have.property(\"code\", \"00\");",
															"    pm.expect(jsonData).to.have.property(\"success\", true);",
															"    pm.expect(jsonData.data).to.be.an('object');",
															"});",
															"",
															"pm.test(\"A success message about adding an organization is returned\", function () {",
															"    pm.expect(jsonData.message).to.eql(\"organization added successfully\");",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "6c6e5298-ccaa-4815-8f76-bc2c787b6e7a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 5,\n  \"name\": \"Assurdly\",\n  \"key\": \"70f7fe9f8648786e1328f67a804b857c59f5f456ca5a75ce5fb846fdb3361726\", \n  \"dateCreated\": \"2024-09-16T20:53:36.251678\"\n}\n",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/organizations/users/add"
											},
											"response": [
												{
													"id": "99ff301b-c0b0-4b8f-a92c-7ea07fa2ac44",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"key\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/organizations/users/add"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Add organization - Empty fields",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b4a59490-5073-411f-a9f5-88abd6ef3268",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"Response code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"pm.test(\"Error response object is returned\", function () {",
															"    pm.expect(jsonData.success).to.eql(false);",
															"    pm.expect(jsonData.data).to.eql(null);",
															"});",
															"",
															"pm.test(\"An error message about the empty fields \", function () {",
															"    pm.expect(jsonData.message).to.eql(\"Kindly provide all required fields\");",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "8180a75a-f5c5-4d98-8296-7b93605f91c0",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"\",\n  \"key\": \"\", \n  \"dateCreated\": \"\"\n}\n",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/organizations/users/add"
											},
											"response": [
												{
													"id": "05255eee-2a00-4f53-ac66-8929e7e1f9ac",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"key\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/organizations/users/add"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Add organization - Invallid Organization Name",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b4a59490-5073-411f-a9f5-88abd6ef3268",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"Response code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"pm.test(\"Error response object is returned\", function () {",
															"    pm.expect(jsonData.success).to.eql(false);",
															"    pm.expect(jsonData.data).to.eql(null);",
															"});",
															"",
															"pm.test(\"An error message about Invalid organization name\", function () {",
															"    pm.expect(jsonData.message).to.eql(\"Invalid organization\");",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "b71aa757-22ca-40d6-b1f1-ac1182dcdc35",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Crystal\",\n  \"key\": \"70f7fe9f8648786e1328f67a804b857c59f5f456ca5a75ce5fb846fdb3361726\", \n  \"dateCreated\": \"2024-09-16T20:53:36.251678\"\n}\n",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/organizations/users/add"
											},
											"response": [
												{
													"id": "14eab08a-800c-4b7c-9163-e541e95d9a6a",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"key\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/organizations/users/add"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Add organization - Invallid Organization Key",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b4a59490-5073-411f-a9f5-88abd6ef3268",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"Response code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"pm.test(\"Error response object is returned\", function () {",
															"    pm.expect(jsonData.success).to.eql(false);",
															"    pm.expect(jsonData.data).to.eql(null);",
															"});",
															"",
															"pm.test(\"An error message about Invalid organization key\", function () {",
															"    pm.expect(jsonData.message).to.eql(\"Organization key provided is incorrect\");",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "cb538020-3cf5-446a-ae4e-6485f65fc704",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Assurdly\",\n  \"key\": \"70f7fe9f8648786e1328f67a804b857c59f5f456ca5a75ce5fb846fdb3361726wwwww\", \n  \"dateCreated\": \"2024-09-16T20:53:36.251678\"\n}\n",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/organizations/users/add"
											},
											"response": [
												{
													"id": "04bf39ee-20ff-400d-a0ea-be1e35ba8ca9",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"key\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/organizations/users/add"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Get organization - User ID",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "04801ba3-9d08-4ab3-a100-33ae41e397d6",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"Response code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"pm.test(\"Successful response object is present\", function () {",
															"    pm.expect(jsonData).to.have.property(\"code\", \"00\");",
															"    pm.expect(jsonData).to.have.property(\"success\", true);",
															"});",
															"",
															"pm.test(\"A single organization is returned\", function () {",
															"    pm.expect(jsonData.data.id).is.not.null;",
															"    pm.expect(jsonData.data.name).is.not.empty;",
															"    pm.expect(jsonData.data.key).is.not.empty;",
															"    pm.expect(jsonData.data.dateCreated).is.not.empty;",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "d6b036c1-1208-44fb-9099-9592271c1814",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/organizations/:id/users/get",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"organizations",
														":id",
														"users",
														"get"
													],
													"variable": [
														{
															"key": "id",
															"value": "1",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "e300733e-23d3-4dc4-abb4-b713c7a1c9fa",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/organizations/:id/users/get",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"organizations",
																":id",
																"users",
																"get"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "58263600-c55d-49f5-b5c3-2b968ce20e14"
								}
							],
							"id": "ac43bf42-9b83-4ae8-aeed-8c3ad539ff51",
							"auth": {
								"type": "apikey",
								"apikey": {
									"value": "{{api-key}}",
									"key": "x-api-key"
								}
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "958fd95b-beaf-4989-9f0f-926a00f7733a",
										"type": "text/javascript",
										"packages": {},
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f2c32e89-06d8-42fb-9c8e-2a63292e63a2",
										"type": "text/javascript",
										"packages": {},
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Branches",
							"item": [
								{
									"name": "Add new branch - not allowed",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "05752602-cd74-4998-a412-fd40440938a1",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Response code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"pm.test(\"Error response object is returned\", function () {",
													"    pm.expect(jsonData).to.have.property(\"code\", \"400\");",
													"    pm.expect(jsonData).to.have.property(\"success\", false);",
													"    pm.expect(jsonData).to.have.property(\"data\", null);",
													"});",
													"",
													"pm.test(\"Error message about not being able to add a branch is returned\", function () {",
													"    pm.expect(jsonData.message).to.eql(\"Your subscription does not support multiple bank branches, please engage support for further assistance\");",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "6119c275-6b5a-476b-b514-3802fe6c0750",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"{{$randomUserName}}\",\n  \"code\": \"{{$randomInt}}\",\n  \"date\": \"2024-08-20\",\n  \"isBatchRunning\": true,\n  \"nextBatchRunDate\": \"2024-09-20\",\n  \"isDefault\": false,\n  \"address\": \"14 Olatunde Onimole Street\",\n  \"cityLocationCode\": \"00001\",\n  \"sortCode\": \"00001\",\n  \"branchType\": \"Online\",\n  \"countryId\": 1,\n  \"branchCode\": \"007\",\n  \"isActive\": true,\n  \"dateCreated\": \"2024-08-20\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/branches/add"
									},
									"response": [
										{
											"id": "bc54a43e-616d-40a7-85f9-a540c469069e",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"date\": \"<dateTime>\",\n  \"isBatchRunning\": \"<boolean>\",\n  \"nextBatchRunDate\": \"<dateTime>\",\n  \"isDefault\": \"<boolean>\",\n  \"address\": \"<string>\",\n  \"cityLocationCode\": \"<string>\",\n  \"sortCode\": \"<string>\",\n  \"branchType\": \"<string>\",\n  \"countryId\": \"<integer>\",\n  \"branchCode\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/branches/add"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Add new branch - Invalid Country ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "05752602-cd74-4998-a412-fd40440938a1",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Response code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"pm.test(\"Error response object is returned\", function () {",
													"    pm.expect(jsonData).to.have.property(\"code\", \"400\");",
													"    pm.expect(jsonData).to.have.property(\"success\", false);",
													"    pm.expect(jsonData).to.have.property(\"data\", null);",
													"});",
													"",
													"pm.test(\"Error message about Invalid Country ID\", function () {",
													"    pm.expect(jsonData.message).to.eql(\"Invalid Country ID\");",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "7547e92d-fa3e-4d3f-a0f5-4654bb2bef9c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"{{$randomUserName}}\",\n  \"code\": \"{{$randomInt}}\",\n  \"date\": \"2024-08-20\",\n  \"isBatchRunning\": true,\n  \"nextBatchRunDate\": \"2024-09-20\",\n  \"isDefault\": false,\n  \"address\": \"14 Olatunde Onimole Street\",\n  \"cityLocationCode\": \"00001\",\n  \"sortCode\": \"00001\",\n  \"branchType\": \"Online\",\n  \"countryId\": 1000,\n  \"branchCode\": \"007\",\n  \"isActive\": true,\n  \"dateCreated\": \"2024-08-20\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/branches/add"
									},
									"response": [
										{
											"id": "db21d246-cdd4-4a2c-badb-7af0d2c9348a",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"date\": \"<dateTime>\",\n  \"isBatchRunning\": \"<boolean>\",\n  \"nextBatchRunDate\": \"<dateTime>\",\n  \"isDefault\": \"<boolean>\",\n  \"address\": \"<string>\",\n  \"cityLocationCode\": \"<string>\",\n  \"sortCode\": \"<string>\",\n  \"branchType\": \"<string>\",\n  \"countryId\": \"<integer>\",\n  \"branchCode\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/branches/add"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Add new branch - No Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "05752602-cd74-4998-a412-fd40440938a1",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Response code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"pm.test(\"Error response object is returned\", function () {",
													"    pm.expect(jsonData).to.have.property(\"code\", \"401\");",
													"    pm.expect(jsonData).to.have.property(\"success\", false);",
													"    pm.expect(jsonData).to.have.property(\"data\", null);",
													"});",
													"",
													"pm.test(\"Error message confirming No Authorization\", function () {",
													"    pm.expect(jsonData.message).to.eql(\"x-api-key is missing in the header\");",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "4a7addf7-97f3-46cd-abfa-e229a8b902c4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"{{$randomUserName}}\",\n  \"code\": \"{{$randomInt}}\",\n  \"date\": \"2024-08-20\",\n  \"isBatchRunning\": true,\n  \"nextBatchRunDate\": \"2024-09-20\",\n  \"isDefault\": false,\n  \"address\": \"14 Olatunde Onimole Street\",\n  \"cityLocationCode\": \"00001\",\n  \"sortCode\": \"00001\",\n  \"branchType\": \"Online\",\n  \"countryId\": 1,\n  \"branchCode\": \"007\",\n  \"isActive\": true,\n  \"dateCreated\": \"2024-08-20\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/branches/add"
									},
									"response": [
										{
											"id": "2edcf61a-c2eb-4003-934d-57c4c2cb1bc4",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"date\": \"<dateTime>\",\n  \"isBatchRunning\": \"<boolean>\",\n  \"nextBatchRunDate\": \"<dateTime>\",\n  \"isDefault\": \"<boolean>\",\n  \"address\": \"<string>\",\n  \"cityLocationCode\": \"<string>\",\n  \"sortCode\": \"<string>\",\n  \"branchType\": \"<string>\",\n  \"countryId\": \"<integer>\",\n  \"branchCode\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/branches/add"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Add new branch - Empty Branch Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "05752602-cd74-4998-a412-fd40440938a1",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Response code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"pm.test(\"Error response object is returned\", function () {",
													"    pm.expect(jsonData).to.have.property(\"code\", \"400\");",
													"    pm.expect(jsonData).to.have.property(\"success\", false);",
													"    pm.expect(jsonData).to.have.property(\"data\", null);",
													"});",
													"",
													"pm.test(\"Error message about empty name is returned\", function () {",
													"    pm.expect(jsonData.message).to.eql(\"Kindly provide a branch name\");",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "78993fd0-7057-498f-8147-66dcfb086a52",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"\",\n  \"code\": \"{{$randomInt}}\",\n  \"date\": \"2024-08-20\",\n  \"isBatchRunning\": true,\n  \"nextBatchRunDate\": \"2024-09-20\",\n  \"isDefault\": false,\n  \"address\": \"14 Olatunde Onimole Street\",\n  \"cityLocationCode\": \"00001\",\n  \"sortCode\": \"00001\",\n  \"branchType\": \"Online\",\n  \"countryId\": 1,\n  \"branchCode\": \"007\",\n  \"isActive\": true,\n  \"dateCreated\": \"2024-08-20\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/branches/add"
									},
									"response": [
										{
											"id": "0697d319-886c-4988-b7b0-1801c1ce2839",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"date\": \"<dateTime>\",\n  \"isBatchRunning\": \"<boolean>\",\n  \"nextBatchRunDate\": \"<dateTime>\",\n  \"isDefault\": \"<boolean>\",\n  \"address\": \"<string>\",\n  \"cityLocationCode\": \"<string>\",\n  \"sortCode\": \"<string>\",\n  \"branchType\": \"<string>\",\n  \"countryId\": \"<integer>\",\n  \"branchCode\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/branches/add"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Add new branch - Empty branch Code",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "05752602-cd74-4998-a412-fd40440938a1",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Response code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"pm.test(\"Error response object is returned\", function () {",
													"    pm.expect(jsonData).to.have.property(\"code\", \"400\");",
													"    pm.expect(jsonData).to.have.property(\"success\", false);",
													"    pm.expect(jsonData).to.have.property(\"data\", null);",
													"});",
													"",
													"pm.test(\"Error message about empty branch code is returned\", function () {",
													"    pm.expect(jsonData.message).to.eql(\"Kindly provide a valid branch code\");",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "bd014a69-3806-44c8-b861-8841559647fa",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"{{$randomUserName}}\",\n  \"code\": \"{{$randomInt}}\",\n  \"date\": \"2024-08-20\",\n  \"isBatchRunning\": true,\n  \"nextBatchRunDate\": \"2024-09-20\",\n  \"isDefault\": false,\n  \"address\": \"14 Olatunde Onimole Street\",\n  \"cityLocationCode\": \"00001\",\n  \"sortCode\": \"00001\",\n  \"branchType\": \"Online\",\n  \"countryId\": 1,\n  \"branchCode\": \"\",\n  \"isActive\": true,\n  \"dateCreated\": \"2024-08-20\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/branches/add"
									},
									"response": [
										{
											"id": "d68de465-e07e-4c93-bd22-e31ff66283e1",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"code\": \"<integer>\",\n  \"date\": \"<dateTime>\",\n  \"isBatchRunning\": \"<boolean>\",\n  \"nextBatchRunDate\": \"<dateTime>\",\n  \"isDefault\": \"<boolean>\",\n  \"address\": \"<string>\",\n  \"cityLocationCode\": \"<string>\",\n  \"sortCode\": \"<string>\",\n  \"branchType\": \"<string>\",\n  \"countryId\": \"<integer>\",\n  \"branchCode\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/branches/add"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Get Branch date created",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7729e13d-181e-4d40-b410-b19d9d053a98",
												"exec": [
													"pm.test(\"Response status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Response has the required fields\", function () {",
													"  const responseData = pm.response.json();",
													"  ",
													"  pm.expect(responseData).to.be.an('object');",
													"  pm.expect(responseData.code).to.exist;",
													"  pm.expect(responseData.success).to.exist;",
													"  pm.expect(responseData.message).to.exist;",
													"  pm.expect(responseData.data).to.exist;",
													"});",
													"",
													"pm.test(\"Bank date is in a valid date format\", function () {    ",
													"    pm.expect(responseData).to.be.an('object');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "bb2981ea-65f7-4cac-8d8b-58c53d4c5978",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/branches/branch/:branchCode/date",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"branches",
												"branch",
												":branchCode",
												"date"
											],
											"variable": [
												{
													"key": "branchCode",
													"value": "{{branchCode}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "7b49992c-aaf9-4c6c-ab35-5a1800b8063a",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/branches/branch/:branchCode/date",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"branches",
														"branch",
														":branchCode",
														"date"
													],
													"variable": [
														{
															"key": "branchCode"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Close Branch",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "28baeab7-0374-40ab-966f-b92cd71408f0",
												"exec": [
													"pm.test(\"Response status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Verify the response schema for the required fields\", function () {",
													"    const responseData = pm.response.json();",
													"",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData).to.have.property('data');",
													"    pm.expect(responseData.data).to.have.property('id');",
													"    pm.expect(responseData.data).to.have.property('name');",
													"    pm.expect(responseData.data).to.have.property('date');",
													"    pm.expect(responseData.data).to.have.property('isBatchRunning');",
													"    pm.expect(responseData.data).to.have.property('nextBatchRunDate');",
													"    pm.expect(responseData.data).to.have.property('isDefault');",
													"    pm.expect(responseData.data).to.have.property('address');",
													"    pm.expect(responseData.data).to.have.property('cityLocationCode');",
													"    pm.expect(responseData.data).to.have.property('sortCode');",
													"    pm.expect(responseData.data).to.have.property('branchType');",
													"    pm.expect(responseData.data).to.have.property('countryId');",
													"    pm.expect(responseData.data).to.have.property('branchCode');",
													"    pm.expect(responseData.data).to.have.property('isActive');",
													"    pm.expect(responseData.data).to.have.property('dateCreated');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "a7c3be17-02ed-4a31-84c9-088f0239c1b1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [],
										"url": "{{baseUrl}}/api/v1/branches/{{branchCode}}/close"
									},
									"response": [
										{
											"id": "c093a867-e591-4271-baa4-722436c32736",
											"name": "Success",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/branches/:branchCode/:openclosestatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"branches",
														":branchCode",
														":openclosestatus"
													],
													"variable": [
														{
															"key": "branchCode"
														},
														{
															"key": "openclosestatus"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Open Branch",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c1cfeb3f-88dc-4749-924a-c6a9b8787994",
												"exec": [
													"pm.test(\"Response status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Response has the required fields\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData.data).to.be.an('object');",
													"    pm.expect(responseData.data).to.have.property('id');",
													"    pm.expect(responseData.data).to.have.property('name');",
													"    pm.expect(responseData.data).to.have.property('code');",
													"    pm.expect(responseData.data).to.have.property('date');",
													"    pm.expect(responseData.data).to.have.property('isBatchRunning');",
													"    pm.expect(responseData.data).to.have.property('nextBatchRunDate');",
													"    pm.expect(responseData.data).to.have.property('isDefault');",
													"    pm.expect(responseData.data).to.have.property('address');",
													"    pm.expect(responseData.data).to.have.property('cityLocationCode');",
													"    pm.expect(responseData.data).to.have.property('sortCode');",
													"    pm.expect(responseData.data).to.have.property('branchType');",
													"    pm.expect(responseData.data).to.have.property('countryId');",
													"    pm.expect(responseData.data).to.have.property('branchCode');",
													"    pm.expect(responseData.data).to.have.property('isActive');",
													"    pm.expect(responseData.data).to.have.property('dateCreated');",
													"});",
													"",
													"",
													"pm.test(\"Data object is present with expected properties\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData).to.have.property('data');",
													"    pm.expect(responseData.data).to.be.an('object');",
													"    pm.expect(responseData.data).to.have.property('id');",
													"    pm.expect(responseData.data).to.have.property('name');",
													"    pm.expect(responseData.data).to.have.property('code');",
													"    pm.expect(responseData.data).to.have.property('date');",
													"    pm.expect(responseData.data).to.have.property('isBatchRunning');",
													"    pm.expect(responseData.data).to.have.property('nextBatchRunDate');",
													"    pm.expect(responseData.data).to.have.property('isDefault');",
													"    pm.expect(responseData.data).to.have.property('address');",
													"    pm.expect(responseData.data).to.have.property('cityLocationCode');",
													"    pm.expect(responseData.data).to.have.property('sortCode');",
													"    pm.expect(responseData.data).to.have.property('branchType');",
													"    pm.expect(responseData.data).to.have.property('countryId');",
													"    pm.expect(responseData.data).to.have.property('branchCode');",
													"    pm.expect(responseData.data).to.have.property('isActive');",
													"    pm.expect(responseData.data).to.have.property('dateCreated');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "fbb5ebd9-ecbc-478d-8ffa-2f3556103c2d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [],
										"url": "{{baseUrl}}/api/v1/branches/{{branchCode}}/open"
									},
									"response": [
										{
											"id": "f5f4ae40-c6a8-4b68-834b-237af2a30467",
											"name": "Success",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/branches/:branchCode/:openclosestatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"branches",
														":branchCode",
														":openclosestatus"
													],
													"variable": [
														{
															"key": "branchCode"
														},
														{
															"key": "openclosestatus"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Get Branches",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e3957ad9-8569-43c3-bd53-70a335c87516",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Response code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"pm.test(\"Successful response object is present\", function () {",
													"    pm.expect(jsonData).to.have.property(\"code\", \"00\");",
													"    pm.expect(jsonData).to.have.property(\"success\", true);",
													"});",
													"",
													"pm.test(\"The information on branches is returned\", function () {",
													"    pm.expect(jsonData.data[0].id).is.not.null;",
													"    pm.expect(jsonData.data[0].name).is.not.empty;",
													"    pm.expect(jsonData.data[0].date).is.not.empty;",
													"    pm.expect(jsonData.data[0].code).is.not.empty;",
													"    pm.collectionVariables.set(\"branchId\", jsonData.data[0].id);",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b6013257-ed57-40b3-9906-d531016ac1e6",
												"exec": [
													"pm.environment.set('baseUrl', 'https://kore78-dev.bank78.co')"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "34f736dc-91d9-406b-89ff-6e1037d7f2ca",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{customer_access_token}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": "{{base_Url}}/api/v1/branches/u/get"
									},
									"response": [
										{
											"id": "60903415-b5ec-4cc2-8f2c-0c4cea417e7b",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": "{{baseUrl}}/api/v1/branches/get"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "9dfd7097-ca9c-4f21-b0f5-ac7b990151e6"
						},
						{
							"name": "customers",
							"item": [
								{
									"name": "Add Customer",
									"item": [
										{
											"name": "Create Customer - Success",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "13b7388b-13a3-45fc-9dc1-492b60e21e7f",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"Response code is 200 (OK)\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"pm.test(\"Response structure and properties for 200\", function () {",
															"    pm.expect(jsonData).to.have.property(\"code\", \"00\");",
															"    pm.expect(jsonData).to.have.property(\"success\", true);",
															"    pm.expect(jsonData.data).to.be.an('object');",
															"});",
															"",
															"",
															"pm.test(\"Check if Customer was successfully created \", function () {",
															"    var responseBody = pm.response.json();",
															"    pm.expect(responseBody.message).to.eql(\"Created Successfully\");",
															"});",
															"",
															"",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "851377a3-e470-405d-a292-945879ec8a0d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"1\",\n  \"organizationId\": 1,\n  \"firstName\": \"{{$randomFirstName}}\",\n  \"lastName\": \"{{$randomLastName}}\",\n  \"middleName\": \"{{$randomFirstName}}\",\n  \"dob\": \"1990-05-20\",\n  \"customerTypeId\": 1,\n  \"alias\": \"<string>\",\n  \"countryId\": 1,\n  \"city\": \"Lagos\",\n  \"address\": \"{{$randomStreetAddress}}\",\n  \"mobileNumber\": \"23491{{$randomBankAccount}}\",\n  \"emailAddress\": \"{{$randomEmail}}\",\n  \"dateCreated\": \"2024-08-20\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/customers/add"
											},
											"response": [
												{
													"id": "8500a7a4-9ef5-4075-ac8e-4af4899d0670",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<long>\",\n  \"organizationId\": \"<long>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"middleName\": \"<string>\",\n  \"dob\": \"<dateTime>\",\n  \"customerTypeId\": \"<integer>\",\n  \"alias\": \"<string>\",\n  \"countryId\": \"<integer>\",\n  \"city\": \"<string>\",\n  \"address\": \"<string>\",\n  \"mobileNumber\": \"<string>\",\n  \"emailAddress\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/customers/add"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Create Customer - Invalid phoneNumber",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "13b7388b-13a3-45fc-9dc1-492b60e21e7f",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"Response code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"pm.test(\"Response structure and properties for 400\", function () {",
															"    pm.expect(jsonData).to.have.property(\"code\", \"400\");",
															"    pm.expect(jsonData).to.have.property(\"success\", false);",
															"    pm.expect(jsonData).to.have.property(\"data\", null);",
															"});",
															"",
															"",
															"pm.test(\"Error message to confirm invalid phone number\", function () {",
															"    var responseBody = pm.response.json();",
															"    pm.expect(responseBody.message).to.eql(\"Invalid mobile number\");",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "932e7fb7-b7a8-49e8-8e0d-3e47bac089b1",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"firstName\": \"{{$randomFirstName}}\",\n  \"lastName\": \"{{$randomLastName}}\",\n  \"middleName\": \"{{$randomFirstName}}\",\n  \"dob\": \"1990-05-20\",\n  \"customerTypeId\": 1,\n  \"countryId\": 1,\n  \"city\": \"Lagos\",\n  \"address\": \"{{$randomStreetAddress}}\",\n  \"mobileNumber\": \"080\",\n  \"emailAddress\": \"{{$randomEmail}}\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/customers/add"
											},
											"response": [
												{
													"id": "9eb512df-a17f-4779-9e2b-03074b9ec91d",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<long>\",\n  \"organizationId\": \"<long>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"middleName\": \"<string>\",\n  \"dob\": \"<dateTime>\",\n  \"customerTypeId\": \"<integer>\",\n  \"alias\": \"<string>\",\n  \"countryId\": \"<integer>\",\n  \"city\": \"<string>\",\n  \"address\": \"<string>\",\n  \"mobileNumber\": \"<string>\",\n  \"emailAddress\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/customers/add"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Create Customer - compound name",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "13b7388b-13a3-45fc-9dc1-492b60e21e7f",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"Response code is 200 (OK)\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"pm.test(\"Response structure and properties for 200\", function () {",
															"    pm.expect(jsonData).to.have.property(\"code\", \"00\");",
															"    pm.expect(jsonData).to.have.property(\"success\", true);",
															"    pm.expect(jsonData.data).to.be.an('object');",
															"});",
															"",
															"",
															"pm.test(\"Check if Customer was successfully created \", function () {",
															"    var responseBody = pm.response.json();",
															"    pm.expect(responseBody.message).to.eql(\"Created Successfully\");",
															"});",
															"",
															"",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "96770b53-849c-4367-b44f-8ff729c101d3",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"firstName\": \"Moses-George\",\n  \"lastName\": \"{{$randomLastName}}\",\n  \"middleName\": \"{{$randomFirstName}}\",\n  \"dob\": \"1990-05-20\",\n  \"customerTypeId\": 1,\n  \"countryId\": 1,\n  \"city\": \"Lagos\",\n  \"address\": \"{{$randomStreetAddress}}\",\n  \"mobileNumber\": \"23491{{$randomBankAccount}}12\",\n  \"emailAddress\": \"{{$randomEmail}}\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/customers/add"
											},
											"response": [
												{
													"id": "deead205-c002-4291-ac84-6350ad24bff8",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<long>\",\n  \"organizationId\": \"<long>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"middleName\": \"<string>\",\n  \"dob\": \"<dateTime>\",\n  \"customerTypeId\": \"<integer>\",\n  \"alias\": \"<string>\",\n  \"countryId\": \"<integer>\",\n  \"city\": \"<string>\",\n  \"address\": \"<string>\",\n  \"mobileNumber\": \"<string>\",\n  \"emailAddress\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/customers/add"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Create Customer - Invalid customerTypeId",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "13b7388b-13a3-45fc-9dc1-492b60e21e7f",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"Response code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"pm.test(\"Response structure and properties for 400\", function () {",
															"    pm.expect(jsonData).to.have.property(\"code\", \"400\");",
															"    pm.expect(jsonData).to.have.property(\"success\", false);",
															"    pm.expect(jsonData).to.have.property(\"data\", null);",
															"});",
															"",
															"",
															"pm.test(\"Error message to address invalid customer type\", function () {",
															"    var responseBody = pm.response.json();",
															"    pm.expect(responseBody.message).to.eql(\"The customer type you have selected does not exist\");",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "62022835-5dd8-4126-9283-f1f7fddb7354",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"firstName\": \"Moses-George\",\n  \"lastName\": \"{{$randomLastName}}\",\n  \"middleName\": \"{{$randomFirstName}}\",\n  \"dob\": \"1990-05-20\",\n  \"customerTypeId\": 60000,\n  \"countryId\": 1,\n  \"city\": \"Lagos\",\n  \"address\": \"{{$randomStreetAddress}}\",\n  \"mobileNumber\": \"23491{{$randomBankAccount}}12\",\n  \"emailAddress\": \"{{$randomEmail}}\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/customers/add"
											},
											"response": [
												{
													"id": "e2b4f492-a82c-4a0a-8b03-8b47a9e0882a",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<long>\",\n  \"organizationId\": \"<long>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"middleName\": \"<string>\",\n  \"dob\": \"<dateTime>\",\n  \"customerTypeId\": \"<integer>\",\n  \"alias\": \"<string>\",\n  \"countryId\": \"<integer>\",\n  \"city\": \"<string>\",\n  \"address\": \"<string>\",\n  \"mobileNumber\": \"<string>\",\n  \"emailAddress\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/customers/add"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Create Customer - Invalid countryId",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "13b7388b-13a3-45fc-9dc1-492b60e21e7f",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"Response code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"pm.test(\"Response structure and properties for 400\", function () {",
															"    pm.expect(jsonData).to.have.property(\"code\", \"400\");",
															"    pm.expect(jsonData).to.have.property(\"success\", false);",
															"    pm.expect(jsonData).to.have.property(\"data\", null);",
															"});",
															"",
															"",
															"pm.test(\"Error message to address invalid country\", function () {",
															"    var responseBody = pm.response.json();",
															"    pm.expect(responseBody.message).to.eql(\"The country you have selected does not exist\");",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "065f3bd1-39e6-4954-b5cc-36a520aa4ea9",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"firstName\": \"Moses-George\",\n  \"lastName\": \"{{$randomLastName}}\",\n  \"middleName\": \"{{$randomFirstName}}\",\n  \"dob\": \"1990-05-20\",\n  \"customerTypeId\": 5,\n  \"countryId\": 100,\n  \"city\": \"Lagos\",\n  \"address\": \"{{$randomStreetAddress}}\",\n  \"mobileNumber\": \"23491{{$randomBankAccount}}\",\n  \"emailAddress\": \"{{$randomEmail}}\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/customers/add"
											},
											"response": [
												{
													"id": "400dd4d0-3820-410b-9a57-8d8c7b6c2140",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<long>\",\n  \"organizationId\": \"<long>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"middleName\": \"<string>\",\n  \"dob\": \"<dateTime>\",\n  \"customerTypeId\": \"<integer>\",\n  \"alias\": \"<string>\",\n  \"countryId\": \"<integer>\",\n  \"city\": \"<string>\",\n  \"address\": \"<string>\",\n  \"mobileNumber\": \"<string>\",\n  \"emailAddress\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/customers/add"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Create Customer - Empty Fields",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "13b7388b-13a3-45fc-9dc1-492b60e21e7f",
														"exec": [
															"var jsonData = pm.response.json();",
															"",
															"pm.test(\"Response code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"pm.test(\"Response structure and properties for 400\", function () {",
															"    pm.expect(jsonData).to.have.property(\"code\", \"400\");",
															"    pm.expect(jsonData).to.have.property(\"success\", false);",
															"    pm.expect(jsonData).to.have.property(\"data\", null);",
															"});",
															"",
															"",
															"pm.test(\"Error message to missing fields\", function () {",
															"    var responseBody = pm.response.json();",
															"    pm.expect(responseBody.message).to.eql(\"Kindly provide all required fields\");",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "e53e027b-2921-41b6-8fee-5c9928072213",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"firstName\": \"\",\n  \"lastName\": \"\",\n  \"middleName\": \"\",\n  \"dob\": \"\",\n  \"customerTypeId\": \"\",\n  \"countryId\": \"\",\n  \"city\": \"\",\n  \"address\": \"\",\n  \"mobileNumber\": \"\",\n  \"emailAddress\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/customers/add"
											},
											"response": [
												{
													"id": "0040a177-41de-4aa4-96c2-eeb3e398cb41",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<long>\",\n  \"organizationId\": \"<long>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"middleName\": \"<string>\",\n  \"dob\": \"<dateTime>\",\n  \"customerTypeId\": \"<integer>\",\n  \"alias\": \"<string>\",\n  \"countryId\": \"<integer>\",\n  \"city\": \"<string>\",\n  \"address\": \"<string>\",\n  \"mobileNumber\": \"<string>\",\n  \"emailAddress\": \"<string>\",\n  \"dateCreated\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/customers/add"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "8f59dc3f-933d-4d1a-b4a4-88888ffdedd2"
								},
								{
									"name": "Get customers",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "94bbf9f5-ca2d-4216-92a2-0f309ceaef0d",
												"exec": [
													"pm.test(\"Response status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Content-Type is application/json\", function () {",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
													"});",
													"",
													"",
													"pm.test(\"Data array is present in the response\", function () {",
													"  const responseData = pm.response.json();",
													"  pm.expect(responseData).to.have.property('data').to.exist;",
													"});",
													"",
													"pm.collectionVariables.set(\"customerId\", jsonData.data.items.customer.id)",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "ff6041e5-c9bf-4067-a578-c6b136c62118",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": "{{baseUrl}}/api/v1/customers/u/all"
									},
									"response": [
										{
											"id": "e73216da-aa8d-418b-8be8-1c3c4ae55ae5",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": "{{baseUrl}}/api/v1/customers/get/all"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Get customers - All types",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "29a8ef7d-70f3-4540-8346-52ad791e1277",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Response code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"pm.test(\"Response structure and properties for 200\", function () {",
													"    pm.expect(jsonData).to.have.property(\"code\", \"00\");",
													"    pm.expect(jsonData).to.have.property(\"success\", true);",
													"});",
													"",
													"pm.test(\"Customer types are returned\", function () {",
													"    pm.expect(jsonData.data[0].id).is.not.null;",
													"    pm.expect(jsonData.data[0].name).is.not.null;",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "388abbbe-bcc2-4620-9b4e-2cb072d35fea",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": "{{baseUrl}}/api/v1/customers/types/all"
									},
									"response": [
										{
											"id": "ff2310ae-7b28-4ba4-bbc4-85c2a945ce77",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": "{{baseUrl}}/api/v1/customers/types/all"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Update Customer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f3665ce1-7fb1-46ef-9f5d-6974bc966cc8",
												"exec": [
													"pm.test(\"Response status code is 200\", function () {",
													"    pm.expect(pm.response.code).to.equal(200);",
													"});",
													"",
													"",
													"pm.test(\"Response has the required fields\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData).to.have.property('code');",
													"    pm.expect(responseData).to.have.property('success');",
													"    pm.expect(responseData).to.have.property('message');",
													"    pm.expect(responseData).to.have.property('data');",
													"});",
													"",
													"",
													"pm.test(\"Data schema is valid\", function () {",
													"  const responseData = pm.response.json();",
													"  ",
													"  pm.expect(responseData).to.be.an('object');",
													"  pm.expect(responseData.data).to.be.an('array');",
													"  ",
													"  responseData.data.forEach(function(item) {",
													"    pm.expect(item).to.have.property('id').that.is.a('number');",
													"    pm.expect(item).to.have.property('name').that.is.a('string');",
													"  });",
													"});",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "2e62834c-a49c-4ee7-b456-9f6b8d0a4aeb",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"{{$randomFirstName}}\",\n  \"lastName\": \"{{$randomLastName}}\",\n  \"middleName\": \"{{$randomFirstName}}\",\n  \"dob\": \"1990-05-20\",\n  \"city\": \"{{$randomCity}}\",\n  \"address\": \"{{$randomStreetAddress}}\",\n  \"occupation\": \"{{$randomJobTitle}}\",\n  \"gender\": \"Male\",\n  \"bvnverified\": true,\n  \"ninVerified\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customers/u/:customerId/update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customers",
												"u",
												":customerId",
												"update"
											],
											"variable": [
												{
													"key": "customerId",
													"value": "{{customerId}}"
												}
											]
										}
									},
									"response": [
										{
											"id": "1501c718-f798-4730-b689-e7b3922e37b0",
											"name": "Success",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"organizationId\": \"<long>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"middleName\": \"<string>\",\n  \"dob\": \"<dateTime>\",\n  \"city\": \"<string>\",\n  \"address\": \"<string>\",\n  \"occupation\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"bvnverified\": \"<boolean>\",\n  \"ninVerified\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customers/customer/:customerId/updatename/organization/:organizationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customers",
														"customer",
														":customerId",
														"updatename",
														"organization",
														":organizationId"
													],
													"variable": [
														{
															"key": "customerId"
														},
														{
															"key": "organizationId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Update Customer - Empty First Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f3665ce1-7fb1-46ef-9f5d-6974bc966cc8",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Response code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"pm.test(\"Error response object is returned\", function () {",
													"    pm.expect(jsonData).to.have.property(\"code\", \"400\");",
													"    pm.expect(jsonData).to.have.property(\"success\", false);",
													"    pm.expect(jsonData).to.have.property(\"data\", null);",
													"});",
													"",
													"pm.test(\"Error message about empty First Name\", function () {",
													"    pm.expect(jsonData.message).to.eql(\"Kindly provide a first name\");",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "03b26eda-0205-42f2-9438-a5d5b81fff05",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"\",\n  \"lastName\": \"{{$randomLastName}}\",\n  \"middleName\": \"{{$randomFirstName}}\",\n  \"dob\": \"1990-05-20\",\n  \"city\": \"{{$randomCity}}\",\n  \"address\": \"{{$randomStreetAddress}}\",\n  \"occupation\": \"{{$randomJobTitle}}\",\n  \"gender\": \"Male\",\n  \"bvnverified\": true,\n  \"ninVerified\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customers/u/:customerId/update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customers",
												"u",
												":customerId",
												"update"
											],
											"variable": [
												{
													"key": "customerId",
													"value": "{{customerId}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "9a9eb33a-0d7e-4ed4-bacf-1783c92ceb6d",
											"name": "Success",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"organizationId\": \"<long>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"middleName\": \"<string>\",\n  \"dob\": \"<dateTime>\",\n  \"city\": \"<string>\",\n  \"address\": \"<string>\",\n  \"occupation\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"bvnverified\": \"<boolean>\",\n  \"ninVerified\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customers/customer/:customerId/updatename/organization/:organizationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customers",
														"customer",
														":customerId",
														"updatename",
														"organization",
														":organizationId"
													],
													"variable": [
														{
															"key": "customerId"
														},
														{
															"key": "organizationId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Update Customer - Empty Fields",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f3665ce1-7fb1-46ef-9f5d-6974bc966cc8",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Response code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"pm.test(\"Error response object is returned\", function () {",
													"    pm.expect(jsonData).to.have.property(\"code\", \"400\");",
													"    pm.expect(jsonData).to.have.property(\"success\", false);",
													"    pm.expect(jsonData).to.have.property(\"data\", null);",
													"});",
													"",
													"pm.test(\"Error message about empty field\", function () {",
													"    pm.expect(jsonData.message).to.eql(\"Kindly provide all required fields\");",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "2fd8f600-3c78-4805-8d8f-4ae8d613b359",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"{\",\n  \"lastName\": \"\",\n  \"middleName\": \"\",\n  \"dob\": \"\",\n  \"city\": \"\",\n  \"address\": \"\",\n  \"occupation\": \"\",\n  \"gender\": \"\",\n  \"bvnverified\": \"\",\n  \"ninVerified\": \"\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customers/u/:customerId/update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customers",
												"u",
												":customerId",
												"update"
											],
											"variable": [
												{
													"key": "customerId",
													"value": "{{customerId}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "0a366f37-5dd0-4aa3-87e4-a6d3ab773043",
											"name": "Success",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"organizationId\": \"<long>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"middleName\": \"<string>\",\n  \"dob\": \"<dateTime>\",\n  \"city\": \"<string>\",\n  \"address\": \"<string>\",\n  \"occupation\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"bvnverified\": \"<boolean>\",\n  \"ninVerified\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customers/customer/:customerId/updatename/organization/:organizationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customers",
														"customer",
														":customerId",
														"updatename",
														"organization",
														":organizationId"
													],
													"variable": [
														{
															"key": "customerId"
														},
														{
															"key": "organizationId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Find Customer by Email",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "18fa2f2f-ab6e-4980-b860-0106e75da7bb",
												"exec": [
													"pm.test(\"Response status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Response has the required fields\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData.data.customer).to.have.property('id');",
													"    pm.expect(responseData.data.customer).to.have.property('organizationId');",
													"    pm.expect(responseData.data.customer).to.have.property('firstName');",
													"    pm.expect(responseData.data.customer).to.have.property('lastName');",
													"    pm.expect(responseData.data.customer).to.have.property('dob');",
													"    pm.expect(responseData.data.customer).to.have.property('customerTypeId');",
													"    pm.expect(responseData.data.customer).to.have.property('countryId');",
													"    pm.expect(responseData.data.customer).to.have.property('city');",
													"    pm.expect(responseData.data.customer).to.have.property('address');",
													"    pm.expect(responseData.data.customer).to.have.property('mobileNumber');",
													"    pm.expect(responseData.data.customer).to.have.property('emailAddress');",
													"    pm.expect(responseData.data.customer).to.have.property('dateCreated');",
													"});",
													"",
													"",
													"pm.test(\"Validate the structure of the 'data' object\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData.data).to.exist.and.to.be.an('object');",
													"    pm.expect(responseData.data.customer).to.exist.and.to.be.an('object');",
													"    pm.expect(responseData.data.customerType).to.exist.and.to.be.an('object');",
													"    pm.expect(responseData.data.walletDtos).to.exist.and.to.be.an('array');",
													"    pm.expect(responseData.data.customerProperties).to.exist.and.to.be.an('array');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "cf3ae12a-89ae-4002-920e-3acd3d451c43",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailAddress\": \"Marc33@hotmail.com\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/customers/u/find/email"
									},
									"response": [
										{
											"id": "bd94b584-8846-4fae-acc0-1676fbab3c1d",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"emailAddress\": \"<string>\",\n  \"organizationId\": \"<long>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/customers/find/email"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Find Customer by Email - Invalid email",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "18fa2f2f-ab6e-4980-b860-0106e75da7bb",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Response code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"pm.test(\"Error response object is returned\", function () {",
													"    pm.expect(jsonData).to.have.property(\"code\", \"400\");",
													"    pm.expect(jsonData).to.have.property(\"success\", false);",
													"    pm.expect(jsonData).to.have.property(\"data\", null);",
													"});",
													"",
													"pm.test(\"Error message about Invalid email\", function () {",
													"    pm.expect(jsonData.message).to.eql(\"Invalid email address\");",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "4e5f8d8c-e065-42d6-bb8b-ce66e550b0b4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailAddress\": \"Marc33@hot\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/customers/u/find/email"
									},
									"response": [
										{
											"id": "32a7aa19-6b33-44a0-a8af-e0266ea0f920",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"emailAddress\": \"<string>\",\n  \"organizationId\": \"<long>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/customers/find/email"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Find Customer by Account Number",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8914e6d9-4e2e-4ac4-82de-c48fd9373c83",
												"exec": [
													"pm.test(\"Response status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Response has the required fields\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData.data.customer).to.have.property('id');",
													"    pm.expect(responseData.data.customer).to.have.property('organizationId');",
													"    pm.expect(responseData.data.customer).to.have.property('firstName');",
													"    pm.expect(responseData.data.customer).to.have.property('lastName');",
													"    pm.expect(responseData.data.customer).to.have.property('dob');",
													"    pm.expect(responseData.data.customer).to.have.property('customerTypeId');",
													"    pm.expect(responseData.data.customer).to.have.property('countryId');",
													"    pm.expect(responseData.data.customer).to.have.property('city');",
													"    pm.expect(responseData.data.customer).to.have.property('address');",
													"    pm.expect(responseData.data.customer).to.have.property('mobileNumber');",
													"    pm.expect(responseData.data.customer).to.have.property('emailAddress');",
													"    pm.expect(responseData.data.customer).to.have.property('dateCreated');",
													"});",
													"",
													"",
													"pm.test(\"Validate the structure of the 'data' object\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData.data).to.exist.and.to.be.an('object');",
													"    pm.expect(responseData.data.customer).to.exist.and.to.be.an('object');",
													"    pm.expect(responseData.data.customerType).to.exist.and.to.be.an('object');",
													"    pm.expect(responseData.data.walletDtos).to.exist.and.to.be.an('array');",
													"    pm.expect(responseData.data.customerProperties).to.exist.and.to.be.an('array');",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "c8880afa-04d1-4331-b823-fe363fabb9de",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{accessToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountNumber\": \"0000163372\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/customers/find/account-number"
									},
									"response": [
										{
											"id": "bbbb37a7-09c9-4a23-9154-33eb46e3cd31",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accountNumber\": \"<string>\",\n  \"organizationId\": \"<long>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/customers/find/account-number"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Find Customer by Account Number Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8a06a297-d69e-429b-b0d5-918347707dd0",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Response code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"pm.test(\"Error response object is returned\", function () {",
													"    pm.expect(jsonData).to.have.property(\"code\", \"400\");",
													"    pm.expect(jsonData).to.have.property(\"success\", false);",
													"    pm.expect(jsonData).to.have.property(\"data\", null);",
													"});",
													"",
													"pm.test(\"Error message about Invalid account name\", function () {",
													"    pm.expect(jsonData.message).to.eql(\"Invalid account number\");",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "d8e16e20-0a84-4ce2-aa06-310aa778f7dc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{accessToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountNumber\": \"000000098711\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/customers/find/account-number"
									},
									"response": [
										{
											"id": "31ed1a27-6a95-4726-896d-098c89422ecd",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accountNumber\": \"<string>\",\n  \"organizationId\": \"<long>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/customers/find/account-number"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "f7188fab-077a-4f39-be42-4ef7e8cd53f6"
						},
						{
							"name": "interests",
							"item": [
								{
									"name": "Get Account Interest",
									"id": "c270d8d4-1706-472f-8df0-47669e26aa6e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/interests/get/month/wallet/:walletId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"interests",
												"get",
												"month",
												"wallet",
												":walletId"
											],
											"variable": [
												{
													"id": "4573e9e6-e69c-4523-ba67-2ed1ebd2d616",
													"key": "walletId",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "aded692a-528a-4824-8959-9c500833667c",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/interests/get/month/wallet/:walletId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"interests",
														"get",
														"month",
														"wallet",
														":walletId"
													],
													"variable": [
														{
															"key": "walletId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "45eaefde-d2b2-4daa-95f7-76ce41d137fd"
						},
						{
							"name": "nip",
							"item": [
								{
									"name": "providus",
									"item": [
										{
											"name": "Inflow",
											"id": "eae53f5c-4eb8-4685-acc9-a1677d9915d4",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sessionId\": \"<string>\",\n  \"accountNumber\": \"<string>\",\n  \"tranRemarks\": \"<string>\",\n  \"transactionAmount\": \"<string>\",\n  \"settledAmount\": \"<string>\",\n  \"feeAmount\": \"<string>\",\n  \"vatAmount\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"initiationTranRef\": \"<string>\",\n  \"settlementId\": \"<string>\",\n  \"sourceAccountNumber\": \"<string>\",\n  \"sourceAccountName\": \"<string>\",\n  \"sourceBankName\": \"<string>\",\n  \"channelId\": \"<string>\",\n  \"tranDateTime\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/nip/providus/inflow"
											},
											"response": [
												{
													"id": "378722b4-f5c0-467f-99c4-4f7596168256",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"sessionId\": \"<string>\",\n  \"accountNumber\": \"<string>\",\n  \"tranRemarks\": \"<string>\",\n  \"transactionAmount\": \"<string>\",\n  \"settledAmount\": \"<string>\",\n  \"feeAmount\": \"<string>\",\n  \"vatAmount\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"initiationTranRef\": \"<string>\",\n  \"settlementId\": \"<string>\",\n  \"sourceAccountNumber\": \"<string>\",\n  \"sourceAccountName\": \"<string>\",\n  \"sourceBankName\": \"<string>\",\n  \"channelId\": \"<string>\",\n  \"tranDateTime\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/nip/providus/inflow"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Outflow",
											"id": "3e12d992-ee34-4257-9963-41eb47757661",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accountNumber\": \"<string>\",\n  \"customerId\": \"<long>\",\n  \"walletId\": \"<long>\",\n  \"amount\": \"<double>\",\n  \"fee\": \"<double>\",\n  \"bankCode\": \"<string>\",\n  \"customerReference\": \"<string>\",\n  \"remarks\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/nip/providus/outflow"
											},
											"response": [
												{
													"id": "915ace55-ff27-4fc2-8333-5123828ea8fb",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"accountNumber\": \"<string>\",\n  \"customerId\": \"<long>\",\n  \"walletId\": \"<long>\",\n  \"amount\": \"<double>\",\n  \"fee\": \"<double>\",\n  \"bankCode\": \"<string>\",\n  \"customerReference\": \"<string>\",\n  \"remarks\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/nip/providus/outflow"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "5fd1ef59-8522-4917-8523-664f70185c1c"
								}
							],
							"id": "f6c86560-32f1-4123-af0d-d54b7aa6609b"
						},
						{
							"name": "products",
							"item": [
								{
									"name": "Create Product",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5b5e6ce6-606a-4ebf-b5b6-544b49bb1222",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.collectionVariables.set(\"productId\", jsonData.data.id);",
													"",
													"pm.test(\"Response status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Validate the response schema for the required fields\", function () {",
													"    const responseData = pm.response.json();",
													"",
													"    pm.expect(responseData.data).to.be.an('object');",
													"    pm.expect(responseData.data.id).to.exist.and.to.be.a('number');",
													"    pm.expect(responseData.data.name).to.exist.and.to.be.a('string');",
													"    pm.expect(responseData.data.organizationId).to.exist.and.to.be.a('number');",
													"    pm.expect(responseData.data.description).to.exist.and.to.be.a('string');",
													"    pm.expect(responseData.data.direction).to.exist.and.to.be.a('string');",
													"    pm.expect(responseData.data.isActive).to.exist.and.to.be.a('boolean');",
													"    pm.expect(responseData.data.dateCreated).to.exist.and.to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "1830909c-2c59-4a26-93e1-21555434c201",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{accessToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-api-key",
												"value": "{{api-key}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"{{$randomJobArea}} Payment\",\n  \"description\": \"{{$randomJobDescriptor}} Payment\",\n  \"direction\": \"C\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/products/add"
									},
									"response": [
										{
											"id": "a03a706e-a33d-41b1-a7ae-8c965862d917",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"organizationId\": \"<long>\",\n  \"description\": \"<string>\",\n  \"direction\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/products/add"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Update Products",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f266312c-b007-45cb-bbc5-0a49f3f9ca62",
												"exec": [
													"pm.test(\"Response status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Validate the data object schema\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData.data).to.be.an('object');",
													"",
													"    const dataKeys = [\"id\", \"name\", \"organizationId\", \"description\", \"direction\", \"isActive\", \"dateCreated\"];",
													"    dataKeys.forEach(key => {",
													"        pm.expect(responseData.data).to.have.property(key);",
													"    });",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "e3a40df2-1791-436f-877c-53c924186da4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"{{productId}}\",\n  \"name\": \"{{$randomJobArea}} Payment\",\n  \"description\": \"{{$randomJobDescriptor}} Payment\",\n  \"direction\": \"D\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/products/update"
									},
									"response": [
										{
											"id": "c21f09b8-7ad5-40da-b5d6-7cf03631f32f",
											"name": "Success",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"organizationId\": \"<long>\",\n  \"description\": \"<string>\",\n  \"direction\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/products/update"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Activate Product",
									"id": "5a520a79-13a5-414a-9381-9e017d9f8b0e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/products/activate/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"products",
												"activate",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "68",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "9c0cd98c-e94a-4e6e-ba2b-cdd7bea93707",
											"name": "Success",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/products/activate/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"products",
														"activate",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Deactivate Product",
									"id": "5925d556-726c-4db6-af81-94c75f4917c3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/products/deactivate/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"products",
												"deactivate",
												":id"
											],
											"variable": [
												{
													"id": "aee2dde0-44bb-43e0-b9b5-18d63302a9b1",
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "04636c35-f2d6-4ed3-9e85-e7c97a285189",
											"name": "Success",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/products/deactivate/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"products",
														"deactivate",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Get Product",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "89169ea6-59d4-49b4-810f-bb1d5686e17d",
												"exec": [
													"pm.test(\"Response status code is 200\", function () {",
													"    pm.expect(pm.response.code).to.equal(200);",
													"});",
													"",
													"",
													"pm.test(\"Content-Type is application/json\", function () {",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
													"});",
													"",
													"",
													"pm.test(\"Data array has the correct schema\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData.data).to.be.an('array');",
													"    responseData.data.forEach(function(item) {",
													"        pm.expect(item).to.have.property('id').that.is.a('number');",
													"        pm.expect(item).to.have.property('name').that.is.a('string');",
													"        pm.expect(item).to.have.property('organizationId').that.is.a('number');",
													"        pm.expect(item).to.have.property('description').that.is.a('string');",
													"        pm.expect(item).to.have.property('direction').that.is.a('string');",
													"        pm.expect(item).to.have.property('isActive').that.is.a('boolean');",
													"        pm.expect(item).to.have.property('dateCreated').that.is.a('string');",
													"    });",
													"});",
													"",
													"",
													"pm.test(\"Check for presence and data types of fields\", function () {",
													"  const responseData = pm.response.json();",
													"  ",
													"  pm.expect(responseData).to.be.an('object');",
													"  ",
													"  responseData.data.forEach((product) => {",
													"    pm.expect(product.id).to.be.a('number');",
													"    pm.expect(product.name).to.be.a('string');",
													"    pm.expect(product.organizationId).to.be.a('number');",
													"    pm.expect(product.description).to.be.a('string');",
													"    pm.expect(product.direction).to.be.a('string');",
													"    pm.expect(product.isActive).to.be.a('boolean');",
													"    pm.expect(product.dateCreated).to.be.a('string');",
													"  });",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "fcce90c8-7d8e-4301-9751-1718bb6796e4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": "{{baseUrl}}/api/v1/products/get"
									},
									"response": [
										{
											"id": "bad11889-bcad-4dfc-b62a-55c6d7fa87d8",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": "{{baseUrl}}/api/v1/products/get"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "bc79c12f-65fd-46d8-9e89-0ac946d5c36a"
						},
						{
							"name": "limits",
							"item": [
								{
									"name": "Add Customer Limit",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c25f36c1-9166-4d7b-9300-ef9ad36dd022",
												"exec": [
													"const responseData = pm.response.json().data;",
													"",
													"pm.test(\"Response status code is 200\", function () {",
													"  pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Validate the response schema for the required fields\", function () {",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData).to.have.property('id');",
													"    pm.expect(responseData).to.have.property('productCurrencyId');",
													"    pm.expect(responseData).to.have.property('singleTransactionLimit');",
													"    pm.expect(responseData).to.have.property('frequency');",
													"    pm.expect(responseData).to.have.property('dailyTransactionLimit');",
													"    pm.expect(responseData).to.have.property('monthlyTransactionLimit');",
													"    pm.expect(responseData).to.have.property('customerId');",
													"});",
													"",
													"pm.test(\"Id is a non-negative integer\", function () {",
													"    pm.expect(responseData.id).to.be.a('number');",
													"    pm.expect(responseData.id).to.be.at.least(0);",
													"});",
													"",
													"pm.test(\"ProductCurrencyId is a non-negative integer\", function () {",
													"    pm.expect(responseData.productCurrencyId).to.be.a('number');",
													"    pm.expect(responseData.productCurrencyId).to.be.at.least(0);",
													"});",
													"",
													"pm.test(\"SingleTransactionLimit is a non-negative integer\", function () {",
													"    pm.expect(responseData.singleTransactionLimit).to.be.a('number');",
													"    pm.expect(responseData.singleTransactionLimit).to.be.at.least(0);",
													"});",
													"",
													"pm.test(\"Frequency is a non-negative integer\", function () {",
													"    pm.expect(responseData.frequency).to.be.a('number');",
													"    pm.expect(responseData.frequency).to.be.at.least(0);",
													"});",
													"",
													"pm.test(\"DailyTransactionLimit is a non-negative integer\", function () {",
													"    pm.expect(responseData.dailyTransactionLimit).to.be.a('number');",
													"    pm.expect(responseData.dailyTransactionLimit).to.be.at.least(0);",
													"});",
													"",
													"pm.test(\"MonthlyTransactionLimit is a non-negative integer\", function () {",
													"    pm.expect(responseData.monthlyTransactionLimit).to.be.a('number');",
													"    pm.expect(responseData.monthlyTransactionLimit).to.be.at.least(0);",
													"});",
													"",
													"pm.test(\"CustomerId is a non-negative integer\", function () {",
													"    pm.expect(responseData.customerId).to.be.a('number');",
													"    pm.expect(responseData.customerId).to.be.at.least(0);",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "fe6fce59-de0f-4312-bbfb-3240161700db",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"currencyId\": 1,\n  \"productId\": 2,\n  \"customerId\": \"{{customerId}}\",\n  \"singleTransactionLimit\": \"50000\",\n  \"frequency\": \"1\",\n  \"dailyTransactionLimit\": \"500000\",\n  \"monthlyTransactionLimit\": \"5000000\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/limits/customer/add"
									},
									"response": [
										{
											"id": "80d0b75f-947d-4b37-a49b-22f179b49715",
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"currencyId\": \"<integer>\",\n  \"productId\": \"<integer>\",\n  \"customerId\": \"<long>\",\n  \"singleTransactionLimit\": \"<double>\",\n  \"frequency\": \"<double>\",\n  \"dailyTransactionLimit\": \"<double>\",\n  \"monthlyTransactionLimit\": \"<double>\",\n  \"id\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/limits/customer/add"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Update Customer Limit",
									"id": "a7170177-09b0-4cfb-b792-32e7f24f76af",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"currencyId\": \"<integer>\",\n  \"productId\": \"<integer>\",\n  \"customerId\": \"<long>\",\n  \"singleTransactionLimit\": \"<double>\",\n  \"frequency\": \"<double>\",\n  \"dailyTransactionLimit\": \"<double>\",\n  \"monthlyTransactionLimit\": \"<double>\",\n  \"id\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/limits/customer/add"
									},
									"response": [
										{
											"id": "6dfc9e9c-906c-4bcf-9c4d-0589afa65a12",
											"name": "Success",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"currencyId\": \"<integer>\",\n  \"productId\": \"<integer>\",\n  \"customerId\": \"<long>\",\n  \"singleTransactionLimit\": \"<double>\",\n  \"frequency\": \"<double>\",\n  \"dailyTransactionLimit\": \"<double>\",\n  \"monthlyTransactionLimit\": \"<double>\",\n  \"id\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/limits/customer/add"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Get Customer Limit",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "17c59ff2-b806-463b-888a-302443094836",
												"exec": [
													"const responseData = pm.response.json().data;",
													"",
													"pm.test(\"Response status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Response has the required fields\", function () {",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData.id).to.exist.and.to.be.a('number');",
													"    pm.expect(responseData.productCurrencyId).to.exist.and.to.be.a('number');",
													"    pm.expect(responseData.singleTransactionLimit).to.exist.and.to.be.a('number');",
													"    pm.expect(responseData.frequency).to.exist.and.to.be.a('number');",
													"    pm.expect(responseData.dailyTransactionLimit).to.exist.and.to.be.a('number');",
													"    pm.expect(responseData.monthlyTransactionLimit).to.exist.and.to.be.a('number');",
													"    pm.expect(responseData.customerId).to.exist.and.to.be.a('number');",
													"});",
													"",
													"",
													"pm.test(\"Code is a non-empty string and success is a boolean\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData.code).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Code should not be empty\");",
													"    pm.expect(responseData.success).to.be.a('boolean');",
													"});",
													"",
													"",
													"pm.test(\"Validate the message is either an empty string or a non-empty string\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData).to.have.property('message').that.is.a('string');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "5e5ba081-9937-4023-95c5-279802e2c8be",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/limits/product/:productId/currency/:currencyId/customer/:customerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"limits",
												"product",
												":productId",
												"currency",
												":currencyId",
												"customer",
												":customerId"
											],
											"variable": [
												{
													"key": "productId",
													"value": "2",
													"description": "(Required) "
												},
												{
													"key": "currencyId",
													"value": "1",
													"description": "(Required) "
												},
												{
													"key": "customerId",
													"value": "{{customerId}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "65827328-5fc4-4a28-b927-76e9ac11c8f2",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/limits/product/:productId/currency/:currencyId/customer/:customerId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"limits",
														"product",
														":productId",
														"currency",
														":currencyId",
														"customer",
														":customerId"
													],
													"variable": [
														{
															"key": "productId"
														},
														{
															"key": "currencyId"
														},
														{
															"key": "customerId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Get Currency Limit",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f9a92b46-a060-44ad-803d-7cd5561476f3",
												"exec": [
													"pm.test(\"Response status code is 200\", function () {",
													"  pm.expect(pm.response.code).to.equal(200);",
													"});",
													"",
													"pm.test(\"Response has the required fields - code, success, message, and data\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData.code).to.exist;",
													"    pm.expect(responseData.success).to.exist;",
													"    pm.expect(responseData.message).to.exist;",
													"});",
													"",
													"",
													"pm.test(\"Code is a non-empty string\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData.code).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Code should not be empty\");",
													"});",
													"",
													"",
													"pm.test(\"Success is a boolean value\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData.success).to.be.a('boolean');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "4c2bc062-2291-4d81-8cf5-a61ab4279b2e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/limits/product/:productId/currency/:currencyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"limits",
												"product",
												":productId",
												"currency",
												":currencyId"
											],
											"variable": [
												{
													"key": "productId",
													"value": "2",
													"description": "(Required) "
												},
												{
													"key": "currencyId",
													"value": "1",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "0ba68a08-81d5-46c0-b053-579e67f71c4a",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/limits/product/:productId/currency/:currencyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"limits",
														"product",
														":productId",
														"currency",
														":currencyId"
													],
													"variable": [
														{
															"key": "productId"
														},
														{
															"key": "currencyId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Update Customer Limit",
									"id": "eb1d0141-19b5-4c63-ac66-7ae338ed2f60",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"currencyId\": \"<integer>\",\n  \"productId\": \"<integer>\",\n  \"customerId\": \"<long>\",\n  \"singleTransactionLimit\": \"<double>\",\n  \"frequency\": \"<double>\",\n  \"dailyTransactionLimit\": \"<double>\",\n  \"monthlyTransactionLimit\": \"<double>\",\n  \"id\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/limits/default/add"
									},
									"response": [
										{
											"id": "49b43ebf-3a04-41ad-9ed1-2b1fc4363f32",
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"currencyId\": \"<integer>\",\n  \"productId\": \"<integer>\",\n  \"customerId\": \"<long>\",\n  \"singleTransactionLimit\": \"<double>\",\n  \"frequency\": \"<double>\",\n  \"dailyTransactionLimit\": \"<double>\",\n  \"monthlyTransactionLimit\": \"<double>\",\n  \"id\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/limits/default/add"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Get Limit",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9182888b-3b4c-44d2-9a53-ce89fb922048",
												"exec": [
													"pm.test(\"Response status code is 200\", function () {",
													"  pm.expect(pm.response.code).to.equal(200);",
													"});",
													"",
													"",
													"pm.test(\"Content-Type is application/json\", function () {",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
													"});",
													"",
													"",
													"pm.test(\"Validate the structure of the data object\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData.data).to.be.an('object');",
													"    pm.expect(responseData.data).to.have.property('id').that.is.a('number');",
													"    pm.expect(responseData.data).to.have.property('productCurrencyId').that.is.a('number');",
													"    pm.expect(responseData.data).to.have.property('singleTransactionLimit').that.is.a('number');",
													"    pm.expect(responseData.data).to.have.property('frequency').that.is.a('number');",
													"    pm.expect(responseData.data).to.have.property('dailyTransactionLimit').that.is.a('number');",
													"    pm.expect(responseData.data).to.have.property('monthlyTransactionLimit').that.is.a('number');",
													"    pm.expect(responseData.data).to.have.property('customerId').that.is.a('number');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "a034258f-153c-40cc-9b3e-10bf228389fc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/limits/default?currencyId=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"limits",
												"default"
											],
											"query": [
												{
													"key": "currencyId",
													"value": "1"
												}
											]
										}
									},
									"response": [
										{
											"id": "2528c501-0df3-4e53-b4ad-4fa57abecd6e",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": "{{baseUrl}}/api/v1/limits/default"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Update Limit",
									"id": "73d942b3-9cbc-4aca-b7e5-2e5378d9bc2f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"currencyId\": \"<integer>\",\n  \"productId\": \"<integer>\",\n  \"customerId\": \"<long>\",\n  \"singleTransactionLimit\": \"<double>\",\n  \"frequency\": \"<double>\",\n  \"dailyTransactionLimit\": \"<double>\",\n  \"monthlyTransactionLimit\": \"<double>\",\n  \"id\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/limits/default/update"
									},
									"response": [
										{
											"id": "22cc218f-db24-4b03-a169-0dc5921dd5ab",
											"name": "Success",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"currencyId\": \"<integer>\",\n  \"productId\": \"<integer>\",\n  \"customerId\": \"<long>\",\n  \"singleTransactionLimit\": \"<double>\",\n  \"frequency\": \"<double>\",\n  \"dailyTransactionLimit\": \"<double>\",\n  \"monthlyTransactionLimit\": \"<double>\",\n  \"id\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/limits/default/update"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "2384fd01-271a-4b84-99f0-4cdc380c6271"
						},
						{
							"name": "transaction-types",
							"item": [
								{
									"name": "Get Transaction Types",
									"id": "4d7f9879-6b3d-4dc2-aa5e-2e1648d2784b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": "{{baseUrl}}/api/v1/transaction-types/get"
									},
									"response": [
										{
											"id": "3b99cfab-98ab-49a5-9d3f-81402a4d5ec1",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": "{{baseUrl}}/api/v1/transaction-types/get"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Get Transaction Type - ID",
									"id": "bfd41491-881b-4db6-8f5e-58a74a98faaa",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/transaction-types/get/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"transaction-types",
												"get",
												":id"
											],
											"variable": [
												{
													"id": "147f2c33-8842-4bb3-87d3-2164cb053c9f",
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "4234326d-5023-4adf-94f0-2a112bc6e158",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/transaction-types/get/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"transaction-types",
														"get",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "fae67209-8274-49b5-bdee-094e0150b7ba"
						},
						{
							"name": "utility",
							"item": [
								{
									"name": "Get All Currencies",
									"id": "959f4087-cd8b-497a-96e1-2f48bee899a9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": "{{baseUrl}}/api/v1/currencies/get"
									},
									"response": [
										{
											"id": "aa8f2037-0bd1-4a98-85ff-dc6f1340eea6",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": "{{baseUrl}}/api/v1/currencies/get"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Get All Country",
									"id": "1f526b1c-7c6a-41b8-9ffa-36331fa24f14",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": "{{baseUrl}}/api/v1/utility/countries/get"
									},
									"response": [
										{
											"id": "3c338a26-d055-48aa-ac3d-4fbce6d1d745",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": "{{baseUrl}}/api/v1/utility/countries/get"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Get Customer Types",
									"id": "50b23786-c7eb-4666-9071-61d07959d55a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": "{{baseUrl}}/api/v1/utility/customers/types/get"
									},
									"response": [
										{
											"id": "410ae4d7-6d03-411d-b1a6-f4f7b3f21bdc",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": "{{baseUrl}}/api/v1/utility/customers/types/get"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "3b34b292-b090-4e1b-b7b1-c81f1e0c4fda"
						},
						{
							"name": "wallets",
							"item": [
								{
									"name": "vault",
									"item": [
										{
											"name": "Create Vault",
											"item": [
												{
													"name": "Create Vault",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "3f4e8dc2-23a2-4275-a0ef-b57993daf8d4",
																"exec": [
																	"pm.test(\"Response status code is 200\", function () {",
																	"  pm.response.to.have.status(200);",
																	"});",
																	"",
																	"",
																	"pm.test(\"Response Content-Type is application/json\", function () {",
																	"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
																	"});",
																	"",
																	"",
																	"pm.test(\"Validate the data object schema\", function () {",
																	"    const responseData = pm.response.json();",
																	"",
																	"    pm.expect(responseData.data).to.be.an('object');",
																	"    pm.expect(responseData.data.interestRate).to.be.a('number');",
																	"    pm.expect(responseData.data.accountNumber).to.be.a('string');",
																	"    pm.expect(responseData.data.bookingReference).to.be.a('string');",
																	"    pm.expect(responseData.data.estimatedYield).to.be.a('number');",
																	"    pm.expect(responseData.data.maturityDate).to.be.a('string');",
																	"});",
																	"",
																	"",
																	"pm.test(\"Code and message should be empty strings if success is true\", function () {",
																	"    const responseData = pm.response.json();",
																	"    ",
																	"    pm.expect(responseData).to.be.an('object');",
																	"    pm.expect(responseData.success).to.equal(true);",
																	"    pm.expect(responseData.code).to.be.a('string').and.to.not.be.empty;",
																	"    pm.expect(responseData.message).to.be.a('string').and.to.not.be.empty;",
																	"});",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "1c6442d1-ca88-40c4-80eb-f05c021c3b65",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"accountToDebit\": \"{{accountNumber}}\",\n  \"amount\": \"5000\",\n  \"tenor\": 30\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/wallets/vault/add"
													},
													"response": [
														{
															"id": "782e7864-d272-47a6-a184-9a18291dfbef",
															"name": "Success",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"accountToDebit\": \"<string>\",\n  \"amount\": \"<double>\",\n  \"tenor\": \"<integer>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": "{{baseUrl}}/api/v1/wallets/vault/add"
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												},
												{
													"name": "Create Vault - Invalid Account Number",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "8045bd8d-f52c-4944-9fac-ee115863876e",
																"exec": [
																	"pm.test(\"Response status code is 400\", function () {",
																	"  pm.response.to.have.status(400);",
																	"});",
																	"",
																	"",
																	"pm.test(\"Response has the required fields - code, success, message, and data\", function () {",
																	"  const responseData = pm.response.json();",
																	"",
																	"  pm.expect(responseData).to.be.an('object');",
																	"  pm.expect(responseData.code).to.exist;",
																	"  pm.expect(responseData.success).to.exist;",
																	"  pm.expect(responseData.message).to.exist;",
																	"});",
																	"",
																	"",
																	"pm.test(\"Code is a non-empty string\", function () {",
																	"    const responseData = pm.response.json();",
																	"    ",
																	"    pm.expect(responseData.code).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Code should be a non-empty string\");",
																	"});",
																	"",
																	"",
																	"pm.test(\"Success is a boolean value\", function () {",
																	"    const responseData = pm.response.json();",
																	"    ",
																	"    pm.expect(responseData).to.be.an('object');",
																	"    pm.expect(responseData.success).to.be.a('boolean');",
																	"});",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "1215cebf-4f24-4f1b-8ba0-1a1ac4ace248",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"accountToDebit\": \"000008360367\",\n  \"amount\": \"5000\",\n  \"tenor\": 30\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/wallets/vault/add"
													},
													"response": [
														{
															"id": "4554e4cc-c033-4c53-9fc6-966fa2742144",
															"name": "Success",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"accountToDebit\": \"<string>\",\n  \"amount\": \"<double>\",\n  \"tenor\": \"<integer>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": "{{baseUrl}}/api/v1/wallets/vault/add"
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												},
												{
													"name": "Create Vault - Invalid Amount",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "99439607-4bb8-4f43-82e4-376b87ced03d",
																"exec": [
																	"pm.test(\"Response status code is 400\", function () {",
																	"  pm.response.to.have.status(400);",
																	"});",
																	"",
																	"",
																	"pm.test(\"Response has the required fields - code, success, message, and data\", function () {",
																	"    const responseData = pm.response.json();",
																	"    ",
																	"    pm.expect(responseData).to.be.an('object');",
																	"    pm.expect(responseData.code).to.exist;",
																	"    pm.expect(responseData.success).to.exist;",
																	"    pm.expect(responseData.message).to.exist;",
																	"});",
																	"",
																	"",
																	"pm.test(\"Code is a non-empty string\", function () {",
																	"    const responseData = pm.response.json();",
																	"    ",
																	"    pm.expect(responseData).to.be.an('object');",
																	"    pm.expect(responseData.code).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Code should not be empty\");",
																	"});",
																	"",
																	"",
																	"pm.test(\"Success field is a boolean value\", function () {",
																	"    const responseData = pm.response.json();",
																	"    ",
																	"    pm.expect(responseData.success).to.be.a('boolean');",
																	"});",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "6071dd92-a91e-4b5e-9732-ed2b37d5ea28",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"accountToDebit\": \"0000083603\",\n  \"amount\": \"5000AB\",\n  \"tenor\": 30\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/wallets/vault/add"
													},
													"response": [
														{
															"id": "b8a7aa2f-1d34-4b7a-88fb-cd3413dd3cfd",
															"name": "Success",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"accountToDebit\": \"<string>\",\n  \"amount\": \"<double>\",\n  \"tenor\": \"<integer>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": "{{baseUrl}}/api/v1/wallets/vault/add"
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												},
												{
													"name": "Create Vault - Invalid tenor",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "3d1d420a-b5a4-439f-b93a-fd2731061e59",
																"exec": [
																	"pm.test(\"Response status code is 400\", function () {",
																	"  pm.response.to.have.status(400);",
																	"});",
																	"",
																	"",
																	"pm.test(\"Response has the required fields\", function () {",
																	"    const responseData = pm.response.json();",
																	"    ",
																	"    pm.expect(responseData).to.be.an('object');",
																	"    pm.expect(responseData.code).to.exist;",
																	"    pm.expect(responseData.success).to.exist;",
																	"    pm.expect(responseData.message).to.exist;",
																	"});",
																	"",
																	"",
																	"pm.test(\"Code is a non-empty string\", function () {",
																	"    const responseData = pm.response.json();",
																	"    ",
																	"    pm.expect(responseData).to.be.an('object');",
																	"    pm.expect(responseData.code).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Code should be a non-empty string\");",
																	"});",
																	"",
																	"",
																	"pm.test(\"Response time is less than 500ms\", function () {",
																	"  pm.expect(pm.response.responseTime).to.be.below(500);",
																	"});",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "7fa85dae-2381-42b5-9f3b-4a0377045d35",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"accountToDebit\": \"0000083603\",\n  \"amount\": \"5000\",\n  \"tenor\": \"30AD\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/wallets/vault/add"
													},
													"response": [
														{
															"id": "94e2780d-5649-4e0a-bdeb-987a1793d1f0",
															"name": "Success",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"accountToDebit\": \"<string>\",\n  \"amount\": \"<double>\",\n  \"tenor\": \"<integer>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": "{{baseUrl}}/api/v1/wallets/vault/add"
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												},
												{
													"name": "Create Vault - Empty Fields",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "f42b9cc6-b024-46d3-9fac-415b051cf629",
																"exec": [
																	"pm.test(\"Response status code is 400\", function () {",
																	"  pm.response.to.have.status(400);",
																	"});",
																	"",
																	"",
																	"pm.test(\"Response has the required fields - code, success, message, and data\", function () {",
																	"    const responseData = pm.response.json();",
																	"    ",
																	"    pm.expect(responseData).to.be.an('object');",
																	"    pm.expect(responseData.code).to.exist;",
																	"    pm.expect(responseData.success).to.exist;",
																	"    pm.expect(responseData.message).to.exist;",
																	"});",
																	"",
																	"",
																	"pm.test(\"Code is a non-empty string, success is a boolean, message is a non-empty string, and data is null\", function () {",
																	"    const responseData = pm.response.json();",
																	"    ",
																	"    pm.expect(responseData).to.be.an('object');",
																	"    pm.expect(responseData.code).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Code should be a non-empty string\");",
																	"    pm.expect(responseData.success).to.be.a('boolean', \"Success should be a boolean\");",
																	"    pm.expect(responseData.message).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should be a non-empty string\");",
																	"    pm.expect(responseData.data).to.be.null;",
																	"});",
																	"",
																	"",
																	"pm.test(\"Response time is less than 500ms\", function () {",
																	"  pm.expect(pm.response.responseTime).to.be.below(500);",
																	"});",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "a221b0b7-db50-4024-a81e-ad8f98e50f3d",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"accountToDebit\": \"\",\n  \"amount\": \"\",\n  \"tenor\": \"\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/wallets/vault/add"
													},
													"response": [
														{
															"id": "77eaef80-6574-40bf-8a46-982d57d4c60e",
															"name": "Success",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"accountToDebit\": \"<string>\",\n  \"amount\": \"<double>\",\n  \"tenor\": \"<integer>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": "{{baseUrl}}/api/v1/wallets/vault/add"
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												}
											],
											"id": "ad54dbe0-9309-4d30-8b28-4760e4093a73"
										},
										{
											"name": "Preliquidate",
											"item": [
												{
													"name": "Preliquidate",
													"id": "248d205b-e99c-4346-be9c-6abc3304107b",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v1/wallets/vault/:accountNumber/preliquidate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"wallets",
																"vault",
																":accountNumber",
																"preliquidate"
															],
															"variable": [
																{
																	"key": "accountNumber",
																	"value": "0000245715",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"id": "7187bc8d-17f1-4c8d-a5ee-ee05ef3a5255",
															"name": "Success",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/wallets/vault/:accountNumber/preliquidate",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"wallets",
																		"vault",
																		":accountNumber",
																		"preliquidate"
																	],
																	"variable": [
																		{
																			"key": "accountNumber"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												}
											],
											"id": "88b03d09-b798-4649-aa56-5ada791214fa"
										},
										{
											"name": "Get Vault Plan",
											"id": "0c89c707-652c-4261-a658-c60f4b15ebce",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"url": "{{baseUrl}}/api/v1/wallets/vault/plans"
											},
											"response": [
												{
													"id": "8092c47d-a18e-4604-949f-70d9210efbba",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": "{{baseUrl}}/api/v1/wallets/vault/plans"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Get Accrued Interest",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e2dd606a-6606-4c7d-9056-c4ea27096e88",
														"exec": [
															"pm.test(\"Response status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"",
															"pm.test(\"Response has the required fields\", function () {",
															"    const responseData = pm.response.json();",
															"    ",
															"    pm.expect(responseData).to.be.an('object');",
															"    pm.expect(responseData.code).to.exist;",
															"    pm.expect(responseData.success).to.exist;",
															"    pm.expect(responseData.message).to.exist;",
															"    pm.expect(responseData.data).to.exist;",
															"});",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "03c29cb0-de1f-48b6-b906-325342f60230",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/wallets/vault/interests/accrued/account/:accountNumber",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"wallets",
														"vault",
														"interests",
														"accrued",
														"account",
														":accountNumber"
													],
													"variable": [
														{
															"key": "accountNumber",
															"value": "0000257895",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "a59f8435-f511-4595-ac15-1022cacfcc36",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/wallets/vault/interests/accrued/account/:accountNumber",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"wallets",
																"vault",
																"interests",
																"accrued",
																"account",
																":accountNumber"
															],
															"variable": [
																{
																	"key": "accountNumber"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "d79c23d2-ed6a-4e89-b868-bb1361d8f842"
								},
								{
									"name": "transaction",
									"item": [
										{
											"name": "Post Transactions",
											"id": "f038975a-4dba-4ff1-9964-98121e694f6e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"productId\": 1,\n    \"amount\": 10000000,\n    \"postedDate\": \"2024-09-02\",\n    \"transactionReference\": \"1212121212-{{$randomAlphaNumeric}}\",\n    \"walletId\": 1,\n    \"customerId\": {{customerId}},\n    \"organizationId\": 1,\n    \"isPosted\": true,\n    \"direction\": \"C\",\n    \"remarks\": \"Test\",\n    \"currency\": \"NGN\",\n    \"batchReference\": \"BATCH-1212121212-MMJMJ111{{$randomBankAccount}}\",\n    \"accountNumber\": \"{{accountNumber}}\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/wallets/wallet/transaction/post"
											},
											"response": [
												{
													"id": "4d25718c-950c-4c6c-944b-2be422867029",
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<long>\",\n  \"productId\": \"<integer>\",\n  \"organizationId\": \"<long>\",\n  \"amount\": \"<double>\",\n  \"fee\": \"<double>\",\n  \"postedDate\": \"<dateTime>\",\n  \"valueDate\": \"<dateTime>\",\n  \"transactionReference\": \"<string>\",\n  \"walletId\": \"<long>\",\n  \"customerId\": \"<long>\",\n  \"isPosted\": \"<boolean>\",\n  \"direction\": \"<string>\",\n  \"remarks\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"batchReference\": \"<string>\",\n  \"accountNumber\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/wallets/wallet/transaction/post"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Transaction Requery",
											"id": "a7f17be4-c7d3-48c4-8bd9-5bfbdfd2d4a9",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accountNumber\": \"<string>\",\n  \"transactionReference\": \"<string>\",\n  \"amount\": \"<double>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/wallets/wallet/transaction/requery"
											},
											"response": [
												{
													"id": "b5e1a54f-37d8-41ee-b285-09011ca0a358",
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"accountNumber\": \"<string>\",\n  \"transactionReference\": \"<string>\",\n  \"amount\": \"<double>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/wallets/wallet/transaction/requery"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Transfer to other account",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e380f454-17af-4e3c-b5f3-b6d2228fb6c3",
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "9da4cc25-8996-4dbb-9158-d827674c64a8",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"amount\": \"6000\",\n  \"beneficiaryCurrency\": \"GHS\",\n  \"beneficiaryId\":\"{{businessBeneficiaryId1}}\",\n  \"destinationAmount\": \"59\",\n  \"exchangeRateAmount\": \"0.0098\",\n  \"exhangeRateId\": \"e99016e65ce84623b88f5eda8ffd92e8\",\n  \"multiplier\": \"0.0098\",\n  \"sourceWalletId\": \"{{bizSourceWalletId}}\",\n  \"transactionPin\": \"2345\",\n   \"isNegotiated\": false,\n  \"negotiatedRate\": 0.0100\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/transfer/api/v1/transfers"
											},
											"response": []
										}
									],
									"id": "d68bf1f5-5fbb-4d9d-8aba-d251fd8950e2"
								},
								{
									"name": "Create Account",
									"item": [
										{
											"name": "Create Account - Naira",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "09e0f058-bfe2-4b10-bf0c-59d3ea03c60f",
														"exec": [
															"const jsonData = pm.response.json();",
															"",
															"// pm.collectionVariables.set(\"accountNumber\", jsonData.data.virtualAccount.accountNumber);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "a930d0bc-79c4-400f-9ab1-6ae266904900",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"walletGroupId\": 32, //account type id, it is optional but if you are going to be using the chart of account feature, you must specify one\n    \"customerId\": {{customerId}},\n    \"walletClassificationId\": 1, //1 = customer account, 2 = internal account\n    \"currencyId\": 1, // 1 = NGN\n    \"name\": \"{{$randomFullName}}\" // an optional name for the account\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/wallets/add"
											},
											"response": [
												{
													"id": "5330a4c3-aaa3-451e-9bd9-e27cb995bc58",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<long>\",\n  \"walletGroupId\": \"<long>\",\n  \"customerId\": \"<long>\",\n  \"availableBalance\": \"<double>\",\n  \"ledgerBalance\": \"<double>\",\n  \"walletRestrictionId\": \"<integer>\",\n  \"walletClassificationId\": \"<integer>\",\n  \"currencyId\": \"<integer>\",\n  \"isInternal\": \"<boolean>\",\n  \"isDefault\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"overdraft\": \"<double>\",\n  \"virtualAccount\": {\n    \"accountNumber\": \"<string>\",\n    \"bankCode\": \"<string>\",\n    \"bankName\": \"<string>\"\n  },\n  \"mobNum\": \"<string>\",\n  \"customerTypeId\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/wallets/add"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Create Account - Dollars",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "09e0f058-bfe2-4b10-bf0c-59d3ea03c60f",
														"exec": [
															"const jsonData = pm.response.json();",
															"",
															"pm.collectionVariables.set(\"accountNumber1\", jsonData.data.virtualAccount.accountNumber);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "97f9c12a-ff39-47c4-956b-a9c8c81e8427",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"walletGroupId\": 32, //account type id, it is optional but if you are going to be using the chart of account feature, you must specify one\n    \"customerId\": {{customerId}},\n    \"walletClassificationId\": 1, //1 = customer account, 2 = internal account\n    \"currencyId\": 107, // 1 = NGN\n    \"name\": \"{{$randomFullName}}\" // an optional name for the account\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/wallets/add"
											},
											"response": [
												{
													"id": "fc022e25-416d-4e3d-ac8b-00555248d2ed",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<long>\",\n  \"walletGroupId\": \"<long>\",\n  \"customerId\": \"<long>\",\n  \"availableBalance\": \"<double>\",\n  \"ledgerBalance\": \"<double>\",\n  \"walletRestrictionId\": \"<integer>\",\n  \"walletClassificationId\": \"<integer>\",\n  \"currencyId\": \"<integer>\",\n  \"isInternal\": \"<boolean>\",\n  \"isDefault\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"overdraft\": \"<double>\",\n  \"virtualAccount\": {\n    \"accountNumber\": \"<string>\",\n    \"bankCode\": \"<string>\",\n    \"bankName\": \"<string>\"\n  },\n  \"mobNum\": \"<string>\",\n  \"customerTypeId\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/wallets/add"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "ae578bc1-e0f4-43a5-b9c3-63855f8d96fe"
								},
								{
									"name": "Get Transaction History",
									"id": "fab9787a-5994-4d97-80eb-c75406850a7d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountNumber\": \"{{accountNumber}}\",\n  \"from\": \"2024-09-02\",\n  \"to\": \"2024-09-03\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/wallets/account-number/history"
									},
									"response": [
										{
											"id": "b88008f3-eb8e-4f1c-8bc9-090953cff29d",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accountNumber\": \"<string>\",\n  \"from\": \"<dateTime>\",\n  \"to\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/wallets/account-number/history"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "41182918-36a7-4037-abbb-8de0812432b0"
						},
						{
							"name": "Dashboard APi",
							"item": [
								{
									"name": "users",
									"item": [
										{
											"name": "Account Setup",
											"item": [
												{
													"name": "1. Account Setup",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "c2578a44-fa9a-43ec-813b-d6ea5d5e8ed1",
																"exec": [
																	"const jsonData = pm.response.json();",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.test(\"Body contains success message and it is true\", function () {",
																	"    pm.expect(typeof jsonData.success).to.eql(\"boolean\", true);",
																	"})",
																	"",
																	"pm.test(\"Body contains message\", function () {",
																	"    pm.expect(jsonData.message).to.eql(\"Account setup successful\").to.not.be.empty;",
																	"})",
																	"",
																	"pm.test(\"Body contains meta data\", function () {",
																	"    pm.expect(jsonData.data).to.eql(\"object\").to.not.be.empty;",
																	"})",
																	"",
																	"pm.test(\"Body contains key\", function () {",
																	"    pm.expect(typeof jsonData.data.key).to.eql(\"string\").to.not.be.empty;",
																	"})"
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "3bcb3f5f-f4ee-4ff7-82f0-fe51c36dab30",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "x-api-key",
																"value": "AdminTest",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"emailAddress\": \"{{$randomFirstName}}@rove10.com\",\r\n  \"password\": \"Qwerty123@\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/account/setup"
													},
													"response": []
												}
											],
											"id": "8e561e87-e1ef-406f-8783-6c1e2ef9791f"
										},
										{
											"name": "Setup 2FA account",
											"item": [
												{
													"name": "1a. Setup 2FA account",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "8587c912-8fae-46ed-b6f7-c5604e5b1aba",
																"exec": [
																	"pm.test(\"Response status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"",
																	"pm.test(\"Content-Type header is application/json\", function () {",
																	"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
																	"});",
																	"",
																	"",
																	"pm.test(\"Response has the required fields - code, success, message, and data\", function () {",
																	"    const responseData = pm.response.json();",
																	"",
																	"    pm.expect(responseData).to.be.an('object');",
																	"    pm.expect(responseData.code).to.exist;",
																	"    pm.expect(responseData.success).to.exist;",
																	"    pm.expect(responseData.message).to.exist;",
																	"    pm.expect(responseData.data).to.exist;",
																	"});",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "6876dd90-859f-446b-acdb-e3774e53a3c7",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "x-api-key",
																"value": "SK-yePgmGNVKhVVDDYzUGajSU1zMYZTh0lUvCyYb4Hx2nBRYBgTOTVFaKCr9tVWEHLNFnb",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\r\n  \"emailAddress\": \"{{emailAddress}}\",\r\n  \"otp\": \"12345678\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/users/u/2fa/otp"
													},
													"response": []
												}
											],
											"id": "0d8ad100-cba0-4421-925b-01d8b3a883ed"
										},
										{
											"name": "Confirm OTP for 2FA",
											"item": [
												{
													"name": "1b Confirm OTP for 2FA setup",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "b8a17d18-1265-466f-940a-3649776dc6e0",
																"exec": [
																	"pm.test(\"Response status code is 200\", function () {",
																	"    pm.expect(pm.response.code).to.equal(200);",
																	"});",
																	"",
																	"pm.test(\"Content-Type header is application/json\", function () {",
																	"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
																	"});",
																	"",
																	"",
																	"pm.test(\"Response has the required fields - code, success, message, data\", function () {",
																	"    const responseData = pm.response.json();",
																	"    ",
																	"    pm.expect(responseData).to.be.an('object');",
																	"    pm.expect(responseData).to.have.property('code');",
																	"    pm.expect(responseData).to.have.property('success');",
																	"    pm.expect(responseData).to.have.property('message');",
																	"    pm.expect(responseData).to.have.property('data');",
																	"});",
																	"",
																	"",
																	"pm.test(\"Data object properties validation\", function () {",
																	"    const responseData = pm.response.json();",
																	"",
																	"    pm.expect(responseData).to.be.an('object');",
																	"    pm.expect(responseData.data).to.have.property('authSetup').that.is.an('object');",
																	"    pm.expect(responseData.data).to.have.property('user').that.is.an('object');",
																	"    pm.expect(responseData.data).to.have.property('message');",
																	"});",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "5e39497e-0b38-496e-9871-670212210c01",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "x-api-key",
																"value": "SK-yePgmGNVKhVVDDYzUGajSU1zMYZTh0lUvCyYb4Hx2nBRYBgTOTVFaKCr9tVWEHLNFnb",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\r\n  \"emailAddress\": \"{{emailAddress}}\",\r\n  \"otp\": \"12345678\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/users/u/2fa/otp/confirm"
													},
													"response": []
												}
											],
											"id": "0176e765-3839-450d-96d8-60e40ffb6c16"
										},
										{
											"name": "Complete 2FA",
											"item": [
												{
													"name": "1c Complete 2FA setup",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "94397afd-9988-4780-9b01-af57a6f5d296",
																"exec": [
																	"pm.test(\"Response status code is 200\", function () {",
																	"    pm.expect(pm.response.code).to.equal(200);",
																	"});",
																	"",
																	"",
																	"pm.test(\"Response has the required fields\", function () {",
																	"    const responseData = pm.response.json();",
																	"    ",
																	"    pm.expect(responseData).to.be.an('object');",
																	"    pm.expect(responseData.code).to.exist;",
																	"    pm.expect(responseData.success).to.exist;",
																	"    pm.expect(responseData.message).to.exist;",
																	"    pm.expect(responseData.data).to.exist;",
																	"});",
																	"",
																	"",
																	"pm.test(\"Code is a non-empty string\", function () {",
																	"    const responseData = pm.response.json();",
																	"",
																	"    pm.expect(responseData.code).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Code should be a non-empty string\");",
																	"});",
																	"",
																	"",
																	"pm.test(\"Success is a boolean value\", function () {",
																	"  const responseData = pm.response.json();",
																	"  ",
																	"  pm.expect(responseData.success).to.be.a('boolean');",
																	"});",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "11b2e459-e2de-49bb-a029-bc78ca917f96",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "x-api-key",
																"value": "SK-yePgmGNVKhVVDDYzUGajSU1zMYZTh0lUvCyYb4Hx2nBRYBgTOTVFaKCr9tVWEHLNFnb",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\r\n  \"emailAddress\": \"{{emailAddress}}\",\r\n  \"otp\": \"657553\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/users/u/2fa/complete"
													},
													"response": []
												}
											],
											"id": "8243a78c-f09f-4152-8325-ddc67dbedbd1"
										},
										{
											"name": "Login",
											"item": [
												{
													"name": "4. Login as a User",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "994b398f-ed74-4803-b823-967ec030fb33",
																"exec": [
																	"const jsonData = pm.response.json();",
																	"",
																	"pm.collectionVariables.set(\"accessToken\", jsonData.data.accessToken);",
																	"pm.environment.set(\"accessToken\", jsonData.data.accessToken);",
																	"",
																	"pm.test(\"Body contains success message and it is true\", function () {",
																	"    pm.expect(pm.response.json().success).to.exist.and.to.be.true;",
																	"});",
																	"",
																	"pm.test(\"Body contains meta data accessToken\", function () {",
																	"     pm.expect(jsonData).to.have.property('data');",
																	"     pm.expect(jsonData.data).to.have.property('accessToken');",
																	"});",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "a1a68971-50a2-49be-8c4b-8d3047863a8a",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "x-api-key",
																"value": "SK-yePgmGNVKhVVDDYzUGajSU1zMYZTh0lUvCyYb4Hx2nBRYBgTOTVFaKCr9tVWEHLNFnb",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\r\n  \"emailAddress\": \"bakare@assurdly.com\",\r\n  \"password\": \"Test123@\",\r\n  \"otp\": \"968515\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/users/u/login"
													},
													"response": []
												}
											],
											"id": "1f99fee1-d030-44fd-9041-4d7643506a78"
										},
										{
											"name": "Create New User",
											"item": [
												{
													"name": "6. Create a New User",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "5196ed52-16f8-4409-86d2-9b988895636c",
																"exec": [
																	"const jsonData = pm.response.json();",
																	"",
																	"pm.collectionVariables.set(\"emailAddress\", jsonData.data.emailAddress);",
																	"pm.environment.set(\"emailAddress\", jsonData.data.emailAddress);",
																	"",
																	"pm.test(\"Response status code is 200\", function () {",
																	"  pm.response.to.have.status(200);",
																	"});",
																	"",
																	"",
																	"pm.test(\"Content-Type header is application/json\", function () {",
																	"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
																	"});",
																	"",
																	"",
																	"pm.test(\"Validate the data object schema\", function () {",
																	"    const responseData = pm.response.json();",
																	"",
																	"    pm.expect(responseData).to.be.an('object');",
																	"    pm.expect(responseData.data).to.be.an('object');",
																	"    pm.expect(responseData.data).to.have.property('id').that.is.a('number');",
																	"    pm.expect(responseData.data).to.have.property('emailAddress').that.is.a('string');",
																	"    pm.expect(responseData.data).to.have.property('password').that.is.a('string');",
																	"    pm.expect(responseData.data).to.have.property('firstName').that.is.a('string');",
																	"    pm.expect(responseData.data).to.have.property('lastName').that.is.a('string');",
																	"    pm.expect(responseData.data).to.have.property('username').that.is.a('string');",
																	"    pm.expect(responseData.data).to.have.property('apiKey').that.is.null;",
																	"    pm.expect(responseData.data).to.have.property('otp').that.is.null;",
																	"    pm.expect(responseData.data).to.have.property('roleId').that.is.a('number');",
																	"    pm.expect(responseData.data).to.have.property('branchId').that.is.a('number');",
																	"    pm.expect(responseData.data).to.have.property('isActive').that.is.a('boolean');",
																	"    pm.expect(responseData.data).to.have.property('dateCreated').that.is.a('string');",
																	"});",
																	"",
																	"",
																	"pm.test(\"EmailAddress is in a valid format\", function () {",
																	"  const responseData = pm.response.json();",
																	"  ",
																	"  pm.expect(responseData.data.emailAddress).to.be.a('string').and.to.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/);",
																	"});",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "2aa0ab47-bb67-49cc-af3e-14e009c307ba",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": {
																"token": "{{accessToken}}"
															}
														},
														"method": "POST",
														"header": [
															{
																"key": "x-api-key",
																"value": "SK-cSCB2QsJODYitYffXc2xxlQ7hB1aloOV9Fj0BGO72CwI7WUp8JIyLJFZKaevM7OcUqh",
																"type": "text",
																"disabled": true
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"emailAddress\": \"{{$randomFirstName}}@rove10.com\",\r\n  \"password\": \"Qwerty123@\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"username\": \"{{$randomUserName}}\",\r\n  \"roleId\": {{roleId}},\r\n  \"branchId\": 13\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/users/u/create"
													},
													"response": []
												}
											],
											"id": "bfb914f5-a853-4e18-981a-c8d10ea061fe"
										},
										{
											"name": "List All Users",
											"item": [
												{
													"name": "7 List All Users",
													"id": "22df8432-07ac-465f-b5d3-f984fb8dc930",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": {
																"token": "{{accessToken}}"
															}
														},
														"method": "GET",
														"header": [
															{
																"key": "x-api-key",
																"value": "SK-cSCB2QsJODYitYffXc2xxlQ7hB1aloOV9Fj0BGO72CwI7WUp8JIyLJFZKaevM7OcUqh",
																"type": "text",
																"disabled": true
															}
														],
														"body": {
															"mode": "raw",
															"raw": "",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/users/u/me"
													},
													"response": []
												}
											],
											"id": "19e4c0fe-977e-4118-8eb0-2662e5460ac0"
										},
										{
											"name": "Ping Logged User",
											"item": [
												{
													"name": "5. Ping Logged In User",
													"id": "5e798d52-c373-4da9-993e-3c60addad4c8",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": {
																"token": "{{accessToken}}"
															}
														},
														"method": "GET",
														"header": [
															{
																"key": "x-api-key",
																"value": "SK-cSCB2QsJODYitYffXc2xxlQ7hB1aloOV9Fj0BGO72CwI7WUp8JIyLJFZKaevM7OcUqh",
																"type": "text",
																"disabled": true
															}
														],
														"body": {
															"mode": "raw",
															"raw": "",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/users/u/me"
													},
													"response": []
												}
											],
											"id": "a1a2b325-5710-47f3-94ea-550b4c5b3dc6"
										},
										{
											"name": "Change Password",
											"item": [
												{
													"name": "Change my password",
													"id": "4aff28c6-17fa-4eea-8053-2f955a6b7ce6",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": {
																"token": "{{accessToken}}"
															}
														},
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"newPassword\": \"Qwerty1234@\",\n    \"currentPassword\": \"Qwerty123@\",\n    \"otp\": \"424316\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/users/u/password/change"
													},
													"response": []
												}
											],
											"id": "d505d76f-30a9-49ec-b291-394c725c0bd7"
										},
										{
											"name": "Get Auth User",
											"id": "eea80211-92bc-4b87-854f-d65a04ebd51c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"url": "{{baseUrl}}/api/v1/users/user/me"
											},
											"response": [
												{
													"id": "a7b78a8c-30af-484a-8f2d-0dfe4e0bc514",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": "{{baseUrl}}/api/v1/users/user/me"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Get User details",
											"id": "07b359a8-698b-4f60-a110-5d0acbba05d9",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{accessToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": "{{baseUrl}}/api/v1/users/u/all"
											},
											"response": [
												{
													"id": "9e307148-3810-4eb2-a8a1-063b268e4ce6",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": "{{baseUrl}}/api/v1/users/user/me"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Edit User",
											"id": "b60cc1b2-be02-4de5-90ef-cecb071529aa",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": 68,\n    \"emailAddress\": \"td.jakes@rove10.com\",\n    \"firstName\": \"Tiller\",\n    \"lastName\": \"Jakes\",\n    \"username\": \"td.jsasakes@rove10.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/users/u/edit"
											},
											"response": [
												{
													"id": "adf22753-013a-4037-8928-5b3ea4e24de2",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": "{{baseUrl}}/api/v1/users/user/me"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Update Status",
											"id": "a15e2737-5c32-4e00-87c4-2984ec019a6b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{accessToken}}"
													}
												},
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/users/u/:userId/status/:status/update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"users",
														"u",
														":userId",
														"status",
														":status",
														"update"
													],
													"variable": [
														{
															"key": "userId",
															"value": "9"
														},
														{
															"key": "status",
															"value": "deactivate",
															"description": "activate/deactivate"
														}
													]
												}
											},
											"response": [
												{
													"id": "fa78d9b7-6e41-4dc9-b7c9-efba42a1b874",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": "{{baseUrl}}/api/v1/users/user/me"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Update Role",
											"id": "fe8b08e3-ff23-4483-955c-1cde1f204be5",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": 68,\n    \"emailAddress\": \"td.jakes@rove10.com\",\n    \"firstName\": \"Tiller\",\n    \"lastName\": \"Jakes\",\n    \"username\": \"td.jsasakes@rove10.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/users/u/:userId/role/:roleId/update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"users",
														"u",
														":userId",
														"role",
														":roleId",
														"update"
													],
													"variable": [
														{
															"id": "c3692be6-c702-4fe8-b46c-d9bd3a87e02d",
															"key": "userId",
															"value": "68"
														},
														{
															"id": "ff53bed5-970d-4fae-87b2-0c3ab8f422fe",
															"key": "roleId",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"id": "489fa59b-ffeb-4a95-9183-2c0d0cf15a07",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": "{{baseUrl}}/api/v1/users/user/me"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "01248662-fc47-4cdb-ad6c-fd82779482f4"
								},
								{
									"name": "Products",
									"item": [
										{
											"name": "/api/v1/products/u/add/organization/:organizationId",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a553e068-df2d-451d-8d93-272caba0adbf",
														"exec": [
															"const jsonData = pm.response.json();",
															"",
															"pm.collectionVariables.set(\"productId_1\", jsonData.data.id);",
															"",
															"pm.test(\"Response status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"",
															"pm.test(\"Validate the response schema for the required fields\", function () {",
															"    const responseData = pm.response.json();",
															"",
															"    pm.expect(responseData.data).to.be.an('object');",
															"    pm.expect(responseData.data.id).to.exist.and.to.be.a('number');",
															"    pm.expect(responseData.data.name).to.exist.and.to.be.a('string');",
															"    pm.expect(responseData.data.organizationId).to.exist.and.to.be.a('number');",
															"    pm.expect(responseData.data.description).to.exist.and.to.be.a('string');",
															"    pm.expect(responseData.data.direction).to.exist.and.to.be.a('string');",
															"    pm.expect(responseData.data.isActive).to.exist.and.to.be.a('boolean');",
															"    pm.expect(responseData.data.dateCreated).to.exist.and.to.be.a('string');",
															"});",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "929ac07a-662a-4d3a-bbdd-6b87a84eda9b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{accessToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "x-api-key",
														"value": "{{api-key}}",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"{{$randomJobArea}} Payment\",\n  \"description\": \"{{$randomJobDescriptor}} Payment\",\n  \"direction\": \"C\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/products/u/add"
											},
											"response": [
												{
													"id": "1468a0dd-497d-4864-afb5-cdac93fc101b",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"organizationId\": \"<long>\",\n  \"description\": \"<string>\",\n  \"direction\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/products/u/add/organization/:organizationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"products",
																"u",
																"add",
																"organization",
																":organizationId"
															],
															"variable": [
																{
																	"key": "organizationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "/api/v1/products/update",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f266312c-b007-45cb-bbc5-0a49f3f9ca62",
														"exec": [
															"pm.test(\"Response status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"",
															"pm.test(\"Validate the data object schema\", function () {",
															"    const responseData = pm.response.json();",
															"    ",
															"    pm.expect(responseData.data).to.be.an('object');",
															"",
															"    const dataKeys = [\"id\", \"name\", \"organizationId\", \"description\", \"direction\", \"isActive\", \"dateCreated\"];",
															"    dataKeys.forEach(key => {",
															"        pm.expect(responseData.data).to.have.property(key);",
															"    });",
															"});",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "bffdf408-e7b9-4f17-be5b-c40ad4910bae",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{accessToken}}"
													}
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "x-api-key",
														"value": "{{api-key}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"59\",\n  \"name\": \"{{$randomJobArea}} Larry\",\n  \"description\": \"{{$randomJobDescriptor}} Payment\",\n  \"direction\": \"D\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/products/update"
											},
											"response": [
												{
													"id": "7786d9e2-9242-44fc-8025-161c0923f0a5",
													"name": "Success",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"organizationId\": \"<long>\",\n  \"description\": \"<string>\",\n  \"direction\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/v1/products/update"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "/api/v1/products/activate/:id",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "35878dff-a93a-4987-9d92-d30945f94b91",
														"exec": [
															"pm.test(\"Response status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Verify the response schema for the presence of all required fields\", function () {",
															"    const responseData = pm.response.json();",
															"",
															"    pm.expect(responseData.data).to.be.an('object');",
															"    pm.expect(responseData.data.id).to.exist;",
															"    pm.expect(responseData.data.name).to.exist;",
															"    pm.expect(responseData.data.organizationId).to.exist;",
															"    pm.expect(responseData.data.description).to.exist;",
															"    pm.expect(responseData.data.direction).to.exist;",
															"    pm.expect(responseData.data.isActive).to.exist;",
															"    pm.expect(responseData.data.dateCreated).to.exist;",
															"});",
															"",
															"",
															"pm.test(\"Ensure that the isActive field is a boolean value\", function () {",
															"  const responseData = pm.response.json();",
															"  ",
															"  pm.expect(responseData.data.isActive).to.be.a('boolean');",
															"});",
															"",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "e5850436-d48a-4905-9547-e98f6b060964",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/products/activate/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"products",
														"activate",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "{{productId_1}}",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "62e5ce7f-9c1d-4f00-9591-ec1e2e4eae28",
													"name": "Success",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/products/activate/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"products",
																"activate",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "/api/v1/products/deactivate/:id",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7f42dc56-7dfd-47be-b1c4-255d03020fd8",
														"exec": [
															"pm.test(\"Response status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"",
															"pm.test(\"Content-Type header is application/json\", function () {",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
															"});",
															"",
															"pm.test(\"Validate the response schema for id, name, organizationId, description, direction, isActive, and dateCreated\", function () {",
															"    const responseData = pm.response.json();",
															"    ",
															"    pm.expect(responseData.data).to.be.an('object');",
															"    pm.expect(responseData.data.id).to.exist.and.to.be.a('number');",
															"    pm.expect(responseData.data.name).to.exist.and.to.be.a('string');",
															"    pm.expect(responseData.data.organizationId).to.exist.and.to.be.a('number');",
															"    pm.expect(responseData.data.description).to.exist.and.to.be.a('string');",
															"    pm.expect(responseData.data.direction).to.exist.and.to.be.a('string');",
															"    pm.expect(responseData.data.isActive).to.exist.and.to.be.a('boolean');",
															"    pm.expect(responseData.data.dateCreated).to.exist.and.to.be.a('string');",
															"});",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "ff4e6464-083e-4b88-a134-569aa12cce20",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PATCH",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/products/deactivate/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"products",
														"deactivate",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "{{productId_1}}",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "8fd2ccea-1642-4ac1-a230-7ccc5970960d",
													"name": "Success",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/products/deactivate/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"products",
																"deactivate",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "/api/v1/products/get",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "89169ea6-59d4-49b4-810f-bb1d5686e17d",
														"exec": [
															"pm.test(\"Response status code is 200\", function () {",
															"    pm.expect(pm.response.code).to.equal(200);",
															"});",
															"",
															"",
															"pm.test(\"Content-Type is application/json\", function () {",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
															"});",
															"",
															"",
															"pm.test(\"Data array has the correct schema\", function () {",
															"    const responseData = pm.response.json();",
															"    ",
															"    pm.expect(responseData.data).to.be.an('array');",
															"    responseData.data.forEach(function(item) {",
															"        pm.expect(item).to.have.property('id').that.is.a('number');",
															"        pm.expect(item).to.have.property('name').that.is.a('string');",
															"        pm.expect(item).to.have.property('organizationId').that.is.a('number');",
															"        pm.expect(item).to.have.property('description').that.is.a('string');",
															"        pm.expect(item).to.have.property('direction').that.is.a('string');",
															"        pm.expect(item).to.have.property('isActive').that.is.a('boolean');",
															"        pm.expect(item).to.have.property('dateCreated').that.is.a('string');",
															"    });",
															"});",
															"",
															"",
															"pm.test(\"Check for presence and data types of fields\", function () {",
															"  const responseData = pm.response.json();",
															"  ",
															"  pm.expect(responseData).to.be.an('object');",
															"  ",
															"  responseData.data.forEach((product) => {",
															"    pm.expect(product.id).to.be.a('number');",
															"    pm.expect(product.name).to.be.a('string');",
															"    pm.expect(product.organizationId).to.be.a('number');",
															"    pm.expect(product.description).to.be.a('string');",
															"    pm.expect(product.direction).to.be.a('string');",
															"    pm.expect(product.isActive).to.be.a('boolean');",
															"    pm.expect(product.dateCreated).to.be.a('string');",
															"  });",
															"});",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "bdd3c0bb-5670-49e2-868b-21bced400cb2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"url": "{{baseUrl}}/api/v1/products/get"
											},
											"response": [
												{
													"id": "bc724e3c-23a1-4fcc-bc40-f4efd223cf3f",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": "{{baseUrl}}/api/v1/products/get"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "40f5aba2-f8c4-41a6-a874-69c5714ad482"
								},
								{
									"name": "Get Roles",
									"item": [
										{
											"name": "Get All roles",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f963fb9b-6e62-4b76-8e64-356981b2b47e",
														"exec": [
															"const jsonData = pm.response.json();",
															"",
															"pm.test(\"Response status code is 200\", function () {",
															"  pm.response.to.have.status(200);",
															"});",
															"",
															"pm.collectionVariables.set(\"roleName\", jsonData.data[0].name);",
															"",
															"pm.test(\"Body contains success message and it is true\", function () {",
															"    pm.expect(jsonData).to.have.property('success', true);",
															"    pm.expect(jsonData.message).to.exist.and.to.be.a('string');",
															"});",
															"",
															"pm.test(\"Body conatains data\", function () {",
															"    pm.expect(jsonData).to.have.property('data');",
															"    pm.expect(jsonData.data).to.be.an('array').that.is.not.empty;",
															"});",
															"",
															"pm.test(\"Body contains id, name, description, roleTypeId, organizationId, dateCreated\", function () {",
															"    var responseBody = pm.response.json();",
															"",
															"    pm.expect(responseBody).to.be.an('object');",
															"    responseBody.data.forEach((role) => {",
															"        pm.expect(role).to.have.property('id');",
															"        pm.expect(role).to.have.property('name');",
															"        pm.expect(role).to.have.property('description');",
															"        pm.expect(role).to.have.property('roleTypeId');",
															"        pm.expect(role).to.have.property('organizationId');",
															"        pm.expect(role).to.have.property('dateCreated');",
															"    });",
															"});",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "c3236dea-9e88-4909-afbd-ec81a639933d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{accessToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": "{{baseUrl}}/api/v1/roles/u/all"
											},
											"response": [
												{
													"id": "aed4d4d3-435a-4ff3-8358-89b20c05e791",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/products/u/get/organization/:organizationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"products",
																"u",
																"get",
																"organization",
																":organizationId"
															],
															"variable": [
																{
																	"key": "organizationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Get all permissions",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "78b8fe8b-984b-4d25-a5c8-95931f5cd818",
														"exec": [
															"const jsonData = pm.response.json();",
															"",
															"pm.collectionVariables.set(\"permissionName\", jsonData.data[5].name);",
															"pm.collectionVariables.set(\"permissionName1\", jsonData.data[6].name);",
															"pm.collectionVariables.set(\"permissionName2\", jsonData.data[7].name);",
															"",
															"pm.test(\"Response status code is 200\", function () {",
															"  pm.response.to.have.status(200);",
															"});",
															"",
															"",
															"pm.test(\"Response has the required fields - id, name, description, and dateCreated\", function () {",
															"    const responseData = pm.response.json();",
															"",
															"    pm.expect(responseData).to.be.an('object');",
															"    responseData.data.forEach(function(item) {",
															"        pm.expect(item).to.have.property('id');",
															"        pm.expect(item).to.have.property('name');",
															"        pm.expect(item).to.have.property('description');",
															"        pm.expect(item).to.have.property('dateCreated');",
															"    });",
															"});",
															"",
															"",
															"pm.test(\"Data array is present and contains the expected number of elements\", function () {",
															"    const responseData = pm.response.json();",
															"    ",
															"    pm.expect(responseData).to.be.an('object');",
															"    pm.expect(responseData.data).to.be.an('array');",
															"});",
															"",
															"",
															"pm.test(\"Data object exists and is an array\", function () {",
															"    const responseData = pm.response.json();",
															"    ",
															"    pm.expect(responseData).to.be.an('object');",
															"    pm.expect(responseData.data).to.be.an('array');",
															"});",
															"",
															"pm.test(\"Validate the data properties\", function () {",
															"    const responseData = pm.response.json();",
															"    ",
															"    responseData.data.forEach(function(item) {",
															"        pm.expect(item.id).to.be.a('number').and.to.be.at.least(0, \"ID should be a non-negative integer\");",
															"        pm.expect(item.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");",
															"        pm.expect(item.description).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Description should not be empty\");",
															"    });",
															"});",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "7fd82161-e73c-46c5-83ef-4790ba2db203",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{accessToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": "{{baseUrl}}/api/v1/roles/u/permissions"
											},
											"response": [
												{
													"id": "db8d9b3c-1c10-4f4f-aecf-82e4fba53186",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": "{{baseUrl}}/api/v1/users/user/me"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Create a role",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3baf39e6-b787-4c41-85e4-74461d20c09c",
														"exec": [
															"const jsonData = pm.response.json();",
															"",
															"pm.collectionVariables.set(\"roleId\", jsonData.data.id);",
															"",
															"pm.test(\"Response status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Response has the required fields\", function () {",
															"    const responseData = pm.response.json();",
															"    ",
															"    pm.expect(responseData.data).to.be.an('object');",
															"    pm.expect(responseData.data).to.have.property('id');",
															"    pm.expect(responseData.data).to.have.property('name');",
															"    pm.expect(responseData.data).to.have.property('description');",
															"    pm.expect(responseData.data).to.have.property('roleTypeId');",
															"    pm.expect(responseData.data).to.have.property('organizationId');",
															"    pm.expect(responseData.data).to.have.property('dateCreated');",
															"});",
															"",
															"",
															"pm.test(\"Id is a non-negative integer\", function () {",
															"    const responseData = pm.response.json();",
															"    ",
															"    pm.expect(responseData.data.id).to.be.a('number').and.to.be.at.least(0);",
															"});",
															"",
															"",
															"pm.test(\"DateCreated is in a valid date format\", function () {",
															"  const responseData = pm.response.json();",
															"  ",
															"  pm.expect(responseData).to.be.an('object');",
															"  pm.expect(responseData.data.dateCreated).to.match(/\\d{4}-\\d{2}-\\d{2}/, \"DateCreated should be in valid date format\");",
															"});",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "57411ea8-b24b-472b-8555-817489f70d77",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{accessToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"{{$randomDepartment}}\",\n    \"description\": \"{{$randomJobDescriptor}}\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/roles/u/add"
											},
											"response": [
												{
													"id": "0decaadd-4e0f-4433-88c8-206128578f08",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"organizationId\": \"<long>\",\n  \"description\": \"<string>\",\n  \"direction\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/products/u/add/organization/:organizationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"products",
																"u",
																"add",
																"organization",
																":organizationId"
															],
															"variable": [
																{
																	"key": "organizationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Update Role",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c92677dd-51a2-48e2-b505-418a2cd28055",
														"exec": [
															"pm.test(\"Response status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"",
															"pm.test(\"Validate the response schema for the required fields\", function () {",
															"    const responseData = pm.response.json();",
															"",
															"    pm.expect(responseData.data).to.be.an('object');",
															"    pm.expect(responseData.data.id).to.exist.and.to.be.a('number');",
															"    pm.expect(responseData.data.name).to.exist.and.to.be.a('string');",
															"    pm.expect(responseData.data.description).to.exist.and.to.be.a('string');",
															"    pm.expect(responseData.data.roleTypeId).to.exist.and.to.be.a('number');",
															"    pm.expect(responseData.data.organizationId).to.exist.and.to.be.a('number');",
															"    pm.expect(responseData.data.dateCreated).to.exist.and.to.be.a('string');",
															"});",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "7116405e-5a0b-4229-a6ea-6b3308eaf307",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{accessToken}}"
													}
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": 1,\n    \"name\": \"{{$randomDepartment}}\",\n    \"description\": \"{{$randomJobDescriptor}}\",\n    \"roleTypeId\": {{roleId}},\n    \"organizationId\": 1,\n    \"dateCreated\": \"2024-08-10T22:31:05.989\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/roles/u/update"
											},
											"response": [
												{
													"id": "419dac16-e150-47b6-b3d1-a94c9bb58256",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"organizationId\": \"<long>\",\n  \"description\": \"<string>\",\n  \"direction\": \"<string>\",\n  \"isActive\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/products/u/add/organization/:organizationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"products",
																"u",
																"add",
																"organization",
																":organizationId"
															],
															"variable": [
																{
																	"key": "organizationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Get Role details",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fb9d1499-13b2-4a4b-9e5c-9980d465937c",
														"exec": [
															"pm.test(\"Response status code is 200\", function () {",
															"    pm.expect(pm.response.code).to.equal(200);",
															"});",
															"",
															"",
															"pm.test(\"Response has the required fields\", function () {",
															"    const responseData = pm.response.json();",
															"    ",
															"    pm.expect(responseData.data).to.be.an('object');",
															"    pm.expect(responseData.data.id).to.exist;",
															"    pm.expect(responseData.data.name).to.exist;",
															"    pm.expect(responseData.data.description).to.exist;",
															"    pm.expect(responseData.data.roleTypeId).to.exist;",
															"    pm.expect(responseData.data.organizationId).to.exist;",
															"    pm.expect(responseData.data.dateCreated).to.exist;",
															"});",
															"",
															"",
															"pm.test(\"ID is a non-negative integer\", function () {",
															"    const responseData = pm.response.json();",
															"    ",
															"    pm.expect(responseData.data.id).to.be.a('number');",
															"    pm.expect(responseData.data.id).to.be.at.least(0);",
															"});",
															"",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "60bc4179-d568-4586-a082-211495f72540",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{accessToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/roles/u/:roleId/details",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"roles",
														"u",
														":roleId",
														"details"
													],
													"variable": [
														{
															"key": "roleId",
															"value": "16"
														}
													]
												}
											},
											"response": [
												{
													"id": "af92a343-ac98-44f5-94e4-19f1257228b4",
													"name": "Get Role details",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v1/roles/u/:roleId/details",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"roles",
																"u",
																":roleId",
																"details"
															],
															"variable": [
																{
																	"key": "roleId",
																	"value": "5"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Length",
															"value": "221"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Date",
															"value": "Sun, 11 Aug 2024 20:38:13 GMT"
														},
														{
															"key": "Server",
															"value": "Kestrel"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n    \"code\": \"00\",\n    \"success\": true,\n    \"message\": \"Retrieved Successfully\",\n    \"data\": {\n        \"id\": 5,\n        \"name\": \"Desk Teller\",\n        \"description\": \"Teller that post transactions\",\n        \"roleTypeId\": 2,\n        \"organizationId\": 56,\n        \"dateCreated\": \"2024-08-10T22:31:05.989\"\n    }\n}"
												}
											]
										},
										{
											"name": "Get Role Permissions",
											"id": "407c920d-9ccf-401f-911e-e37d28d04e1e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{accessToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/roles/u/:roleId/permissions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"roles",
														"u",
														":roleId",
														"permissions"
													],
													"variable": [
														{
															"key": "roleId",
															"value": "{{roleId}}"
														}
													]
												}
											},
											"response": [
												{
													"id": "c7de28db-4d56-4b4b-a202-5acda07bd983",
													"name": "Get Role Permissions",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/v1/roles/u/:roleId/permissions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"roles",
																"u",
																":roleId",
																"permissions"
															],
															"variable": [
																{
																	"key": "roleId",
																	"value": "2"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Length",
															"value": "372"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Date",
															"value": "Sun, 11 Aug 2024 20:59:33 GMT"
														},
														{
															"key": "Server",
															"value": "Kestrel"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n    \"code\": \"00\",\n    \"success\": true,\n    \"message\": \"Retrieved Successfully\",\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"User.Create\",\n            \"description\": \"Permission\",\n            \"dateCreated\": \"2024-08-10T22:32:33.676\"\n        },\n        {\n            \"id\": 3,\n            \"name\": \"User.Delete\",\n            \"description\": \"Permission\",\n            \"dateCreated\": \"2024-08-10T22:32:33.676\"\n        },\n        {\n            \"id\": 4,\n            \"name\": \"User.Password.Update\",\n            \"description\": \"Permission\",\n            \"dateCreated\": \"2024-08-10T22:32:33.676\"\n        }\n    ]\n}"
												}
											]
										},
										{
											"name": "Update Role Permissions",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b5fed3c4-98cc-4aa0-987d-5cbd2d6cbbb2",
														"exec": [
															"pm.test(\"Response status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"",
															"pm.test(\"Content type is application/json\", function () {",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
															"});",
															"",
															"",
															"pm.test(\"Response has the required fields - code, success, message, and data\", function () {",
															"  const responseData = pm.response.json();",
															"",
															"  pm.expect(responseData).to.be.an('object');",
															"  pm.expect(responseData.code).to.exist;",
															"  pm.expect(responseData.success).to.exist;",
															"  pm.expect(responseData.message).to.exist;",
															"  pm.expect(responseData.data).to.exist;",
															"});",
															"",
															"",
															"pm.test(\"Data object contains expected fields\", function () {",
															"    const responseData = pm.response.json();",
															"",
															"    pm.expect(responseData.data).to.be.an('object');",
															"    pm.expect(responseData.data).to.have.property('newPermissionsAdded');",
															"    pm.expect(responseData.data).to.have.property('permissionsRemoved');",
															"});",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "98f43388-7d85-4237-b2ed-64c3c0d46191",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{accessToken}}"
													}
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"name\": \"{{permissionName}}\"\n    },\n     {\n        \"name\": \"{{permissionName1}}\"\n    },\n     {\n        \"name\": \"{{permissionName2}}\"\n    },\n    {\n        \"name\": \"User.Create\"\n    }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/roles/u/:roleId/permission/update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"roles",
														"u",
														":roleId",
														"permission",
														"update"
													],
													"variable": [
														{
															"key": "roleId",
															"value": "{{roleId}}"
														}
													]
												}
											},
											"response": [
												{
													"id": "26d03194-4244-47e7-953d-e72b767f8039",
													"name": "Update Role Permissions",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n    {\n        \"id\": \"1\"\n    },\n    {\n        \"id\": \"2\"\n    }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/roles/u/:roleId/permission/update",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"roles",
																"u",
																":roleId",
																"permission",
																"update"
															],
															"variable": [
																{
																	"key": "roleId",
																	"value": "2"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Length",
															"value": "117"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Date",
															"value": "Sun, 11 Aug 2024 20:59:48 GMT"
														},
														{
															"key": "Server",
															"value": "Kestrel"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n    \"code\": \"00\",\n    \"success\": true,\n    \"message\": \"Updated Successfully\",\n    \"data\": {\n        \"newPermissionsAdded\": 1,\n        \"permissionsRemoved\": 2\n    }\n}"
												}
											]
										}
									],
									"id": "72c26410-e31f-4714-80f2-072580b18f11"
								}
							],
							"id": "0a3022b6-348e-4f3d-b0c6-90397ab58a34",
							"auth": {
								"type": "apikey",
								"apikey": {
									"value": "{{api-key}}",
									"key": "x-api-key"
								}
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "1c7f561a-daee-4e63-b8bc-bdec81695372",
										"type": "text/javascript",
										"packages": {},
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "588ae814-9afb-4471-9ced-51dfda5cbbd1",
										"type": "text/javascript",
										"packages": {},
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Multi-Currency",
							"item": [
								{
									"name": "Add New currency rate",
									"id": "5d2c5318-a8bd-4fe8-b07d-9285820b5fd7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"CurrencyId\": 1,\n    \"FixRate\": \"2\",\n    \"BuyRate\": \"2\",\n    \"SellRate\": \"2\",\n    \"MidRate\": \"2\",\n    \"CloseRate\": \"2\",\n    \"CreatedBy\": \"1\",\n    \"Code\": \"EUR\",\n    \"CurrencyDecimalPlace\": \"2\",\n    \"NumberOfDaysInAWeek\": \"7\",\n    \"NumberOfWeekendDays\": \"2\",\n    \"NumberOfDaysInAYear\": \"365\",\n    \"NumberOfDaysInAMonth\": \"30\",\n    \"Name\": \"EUR\",\n    \"IsoCode\": \"EUR\",\n    \"BankCode\": \"930\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/multicurrency/currency/rate/add"
									},
									"response": []
								},
								{
									"name": "Get currency rate",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "51cfab69-9af8-4550-9de5-f143994c9c7e",
												"exec": [
													"pm.test(\"Response status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Validate the structure of the data array\", function () {",
													"  const responseData = pm.response.json();",
													"  ",
													"  pm.expect(responseData).to.be.an('object');",
													"  pm.expect(responseData.data).to.be.an('array');",
													"  pm.expect(responseData.data).to.have.length.above(0, \"Data array should not be empty\");",
													"  responseData.data.forEach(function(item) {",
													"    pm.expect(item).to.be.an('object');",
													"    pm.expect(item).to.have.property('currencyid');",
													"    pm.expect(item).to.have.property('isoCurCode');",
													"    pm.expect(item).to.have.property('shortName');",
													"    pm.expect(item).to.have.property('curCode');",
													"    pm.expect(item).to.have.property('name');",
													"    pm.expect(item).to.have.property('decPla');",
													"    pm.expect(item).to.have.property('spotRate');",
													"    pm.expect(item).to.have.property('buyRate');",
													"    pm.expect(item).to.have.property('sellRate');",
													"    pm.expect(item).to.have.property('closRate');",
													"    pm.expect(item).to.have.property('fixRate');",
													"    pm.expect(item).to.have.property('midRate');",
													"    pm.expect(item).to.have.property('valDays');",
													"    pm.expect(item).to.have.property('weekend');",
													"    pm.expect(item).to.have.property('weekEndDays');",
													"    pm.expect(item).to.have.property('bankCode');",
													"    pm.expect(item).to.have.property('corBraCode');",
													"    pm.expect(item).to.have.property('intBaseDays');",
													"    pm.expect(item).to.have.property('monDays');",
													"    pm.expect(item).to.have.property('dateUpdated');",
													"    pm.expect(item).to.have.property('isactive');",
													"    pm.expect(item).to.have.property('dateCreated');",
													"    pm.expect(item).to.have.property('createdBy');",
													"    pm.expect(item).to.have.property('updatedBy');",
													"    pm.expect(item).to.have.property('deletedBy');",
													"  });",
													"});",
													"",
													"",
													"pm.test(\"All data objects in the array have the required fields\", function () {",
													"    const responseData = pm.response.json();",
													"",
													"    pm.expect(responseData.data).to.be.an('array').that.is.not.empty;",
													"",
													"    responseData.data.forEach(function (dataObject) {",
													"        pm.expect(dataObject).to.include.all.keys(",
													"            \"currencyid\", \"isoCurCode\", \"shortName\", \"curCode\", \"name\", \"decPla\", ",
													"            \"spotRate\", \"buyRate\", \"sellRate\", \"closRate\", \"fixRate\", \"midRate\", ",
													"            \"valDays\", \"weekend\", \"weekEndDays\", \"bankCode\", \"corBraCode\", ",
													"            \"intBaseDays\", \"monDays\", \"dateUpdated\", \"isactive\", \"dateCreated\", ",
													"            \"createdBy\", \"updatedBy\", \"deletedBy\"",
													"        );",
													"    });",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "3bd48b43-9eae-4a9b-a8f1-e99bb1ecc5cc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": "{{baseUrl}}/api/v1/multicurrency/currency/rates"
									},
									"response": []
								},
								{
									"name": "Modify currency rate",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a3b84c80-1fbf-4b45-aed1-a0e253b4be54",
												"exec": [
													"pm.test(\"Response status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Validate the response schema for code, success, message, and data\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData.code).to.exist.and.to.be.a('string');",
													"    pm.expect(responseData.success).to.exist.and.to.be.a('boolean');",
													"    pm.expect(responseData.message).to.exist.and.to.be.a('string');",
													"    pm.expect(responseData.data).to.exist.and.to.be.an('object');",
													"});",
													"",
													"",
													"pm.test(\"Ensure the data object has the fields status and message\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData.data).to.be.an('object');",
													"    pm.expect(responseData.data).to.have.property('status');",
													"    pm.expect(responseData.data).to.have.property('message');",
													"});",
													"",
													"",
													"pm.test(\"Ensure the success field is a boolean value\", function () {",
													"  const responseData = pm.response.json();",
													"  ",
													"  pm.expect(responseData).to.be.an('object');",
													"  pm.expect(responseData.success).to.be.a('boolean');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "02537728-b26a-4ad1-bea8-51cd4e865044",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"CurrencyId\": 181,\n    \"FixRate\": \"2\",\n    \"BuyRate\": \"2\",\n    \"SellRate\": \"3\",\n    \"MidRate\": \"2\",\n    \"CloseRate\": \"2\",\n    \"CreatedBy\": \"1\",\n    \"Code\": \"EUR\",\n    \"CurrencyDecimalPlace\": \"2\",\n    \"NumberOfDaysInAWeek\": \"7\",\n    \"NumberOfWeekendDays\": \"2\",\n    \"NumberOfDaysInAYear\": \"365\",\n    \"NumberOfDaysInAMonth\": \"31\",\n    \"Name\": \"EUR\",\n    \"IsoCode\": \"978\",\n    \"BankCode\": \"045\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/multicurrency/currency/rate/modify"
									},
									"response": []
								},
								{
									"name": "Reactivate Currency Rate",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e00532c2-12ac-4360-85f4-ae09f8f19761",
												"exec": [
													"pm.test(\"Response status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Validate the response schema for code, success, message, and data fields\", function () {",
													"  const responseData = pm.response.json();",
													"  ",
													"  pm.expect(responseData).to.be.an('object');",
													"  pm.expect(responseData.code).to.exist.and.to.be.a('string');",
													"  pm.expect(responseData.success).to.exist.and.to.be.a('boolean');",
													"  pm.expect(responseData.message).to.exist.and.to.be.a('string');",
													"  pm.expect(responseData.data).to.exist.and.to.be.an('object');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "e93e98f4-b650-4373-8934-7ee4cae5b837",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"CurrencyId\": 4,\n    \"FixRate\": \"1500\",\n    \"BuyRate\": \"1400\",\n    \"SellRate\": \"1600\",\n    \"MidRate\": \"1500\",\n    \"CloseRate\": \"1500\",\n    \"CreatedBy\": \"1\",\n    \"Code\": \"KRD\",\n    \"CurrencyDecimalPlace\": \"2\",\n    \"NumberOfDaysInAWeek\": \"7\",\n    \"NumberOfWeekendDays\": \"2\",\n    \"NumberOfDaysInAYear\": \"365\",\n    \"NumberOfDaysInAMonth\": \"30\",\n    \"Name\": \"KRD\",\n    \"IsoCode\": \"KRD\",\n    \"BankCode\": \"044\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/multicurrency/currency/rate/reactivate"
									},
									"response": []
								},
								{
									"name": "Deactivate Currency Rate",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dc714f1b-1076-4fa5-9c1e-cf18acbdd78b",
												"exec": [
													"pm.test(\"Response status code is 200\", function () {",
													"  pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Validate the response schema for required fields\", function () {",
													"    const responseData = pm.response.json();",
													"",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData.code).to.exist.and.to.be.a('string');",
													"    pm.expect(responseData.success).to.exist.and.to.be.a('boolean');",
													"    pm.expect(responseData.message).to.exist.and.to.be.a('string');",
													"    pm.expect(responseData.data).to.exist.and.to.be.an('object');",
													"    pm.expect(responseData.data.status).to.exist.and.to.be.a('number');",
													"    pm.expect(responseData.data.message).to.exist.and.to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "06ad087b-2876-4bb0-b1e4-1d2ade402f1b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"CurrencyId\": 2\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/multicurrency/currency/rate/deactivate"
									},
									"response": []
								},
								{
									"name": "Fx Transfer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e4ec5b97-a786-4067-88b0-5d8e93ffaaba",
												"exec": [
													"pm.test(\"Response status code is 200\", function () {",
													"  pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Content-Type header is application/json\", function () {",
													"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
													"});",
													"",
													"",
													"pm.test(\"Response has the required fields - code, success, message, and data\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData.code).to.exist;",
													"    pm.expect(responseData.success).to.exist;",
													"    pm.expect(responseData.message).to.exist;",
													"    pm.expect(responseData.data).to.exist;",
													"});",
													"",
													"",
													"pm.test(\"Data object contains the expected fields - status and message\", function () {",
													"  const responseData = pm.response.json();",
													"",
													"  pm.expect(responseData).to.be.an('object');",
													"  pm.expect(responseData.data).to.exist.and.to.be.an('object');",
													"  pm.expect(responseData.data).to.have.property('status');",
													"  pm.expect(responseData.data).to.have.property('message');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "0ca46328-14e7-46b0-9314-3de9e25e9597",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"FromAccountNumber\": \"{{accountNumber}}\",\n    \"ToAccountNumber\": \"{{accountNumber1}}\",\n    \"Fee\": \"1\",\n    \"ProductId\": \"68\",\n    \"TransactionReference\": \"Ref-Buying NGN 1647NGN2USD261384 {{$randomBankAccount}}\",\n    \"BatchReference\": \"Ref- Buying NGN 1647NGN2USD261387{{$randomBankAccount}}\",\n    \"Amount\": \"10\",\n    \"Remarks\": \"Convert FX\",\n    \"BranchCode\": \"999\",\n    \"TransactionTypeId\": \"\",\n    \"FxRate\": null,\n    \"OrganizationId\": \"1\"\n}\n\n// {\n//  \"Fee\": 0,\n//  \"Amount\": 15,\n//  \"FxRate\": null,\n//  \"Remarks\": \"Debit NGN23809.52380952381 into 0000045692 [+NGN15.0000000000000003] |Ferrry Den|0000045692|Rove10\",\n//  \"Currency\": 125,\n//  \"Direction\": \"C\",\n//  \"AccountNumber\": null,\n//  \"BatchReference\": null,\n//  \"ToAccountNumber\": \"2330004231\",\n//  \"FromAccountNumber\": \"0000044860\",\n//  \"TransactionReference\": \"{{$randomBankAccount}}1647NGN2USD261384\"\n// }\n\n// {\n//   \"amount\": \"6000\",\n//   \"beneficiaryCurrency\": \"GHS\",\n//   \"beneficiaryId\":\"944\",\n//   \"destinationAmount\": \"59\",\n//   \"exchangeRateAmount\": \"0.0098\",\n//   \"exhangeRateId\": \"e99016e65ce84623b88f5eda8ffd92e8\",\n//   \"multiplier\": \"0.0098\",\n//   \"sourceWalletId\": \"235\",\n//   \"transactionPin\": \"2345\",\n//    \"isNegotiated\": false,\n//   \"negotiatedRate\": 0.0100,\n//   \"FromAccountNumber\": \"{{accountNumber}}\",\n//   \"ToAccountNumber\": \"0000087157\",\n//   \"TransactionReference\": \"{{$randomBankAccount}}1647NGN2USD261384\"\n// }\n\n// {\n//   \"Fee\": 100,\n//   \"Amount\": 78.55,\n//   \"FxRate\": 0.0785545954438334642576590731,\n//   \"Remarks\": \"Debit KES78.55 into 0000045685 [+KES999.9415] |Ferrry Den|0000045685|Rove10\",\n//   \"Currency\": 154,\n//   \"Direction\": null,\n//   \"ProductId\": \"7\",\n//   \"AccountNumber\": null,\n//   \"BatchReference\": null,\n//   \"ToAccountNumber\": \"0000045685\",\n//   \"TargetCurrencyId\": 1,\n//   \"FromAccountNumber\": \"0000190107\",\n//   \"TransactionReference\": \"241002141352KES2NGN057414\"\n// }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/multicurrency/transfer"
									},
									"response": []
								},
								{
									"name": "Fx USD - NGN Convert",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e4ec5b97-a786-4067-88b0-5d8e93ffaaba",
												"exec": [
													"pm.test(\"Response status code is 200\", function () {",
													"  pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Content-Type header is application/json\", function () {",
													"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
													"});",
													"",
													"",
													"pm.test(\"Response has the required fields - code, success, message, and data\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData.code).to.exist;",
													"    pm.expect(responseData.success).to.exist;",
													"    pm.expect(responseData.message).to.exist;",
													"    pm.expect(responseData.data).to.exist;",
													"});",
													"",
													"",
													"pm.test(\"Data object contains the expected fields - status and message\", function () {",
													"  const responseData = pm.response.json();",
													"",
													"  pm.expect(responseData).to.be.an('object');",
													"  pm.expect(responseData.data).to.exist.and.to.be.an('object');",
													"  pm.expect(responseData.data).to.have.property('status');",
													"  pm.expect(responseData.data).to.have.property('message');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "8a826e7b-43ce-4205-baa4-6bc2eb421d5a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "x-api-key",
												"value": "SK-sdyviR0yfjGtNppimytqkX6Y7lJqDNWw5NdPHCK8hYjpqk8oM0Adn4hoBHEsDUWqRgm",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\n    \"FromAccountNumber\": \"0000079086\", //USD\n    \"ToAccountNumber\": \"0000079062\",  //NGN\n    \"Fee\": \"10\",\n    \"ProductId\": \"281\",\n    \"TransactionReference\": \"Ref-Buying NGN 1647NGN2USD261384 {{$randomBankAccount}}\",\n    \"BatchReference\": \"Ref- Buying NGN 1647NGN2USD261387{{$randomBankAccount}}\",\n    \"Amount\": \"100\",\n    \"Remarks\": \"USD-NGN\",\n    \"BranchCode\": \"999\",\n    \"TransactionTypeId\": \"\",\n    \"FxRate\": \"\",\n    \"OrganizationId\": \"23\",\n    \"targetCurrencyId\": \"\"\n}\n\n// {\n//  \"Fee\": 0,\n//  \"Amount\": 15,\n//  \"FxRate\": null,\n//  \"Remarks\": \"Debit NGN23809.52380952381 into 0000045692 [+NGN15.0000000000000003] |Ferrry Den|0000045692|Rove10\",\n//  \"Currency\": 125,\n//  \"Direction\": \"C\",\n//  \"AccountNumber\": null,\n//  \"BatchReference\": null,\n//  \"ToAccountNumber\": \"2330004231\",\n//  \"FromAccountNumber\": \"0000044860\",\n//  \"TransactionReference\": \"{{$randomBankAccount}}1647NGN2USD261384\"\n// }\n\n// {\n//   \"amount\": \"6000\",\n//   \"beneficiaryCurrency\": \"GHS\",\n//   \"beneficiaryId\":\"944\",\n//   \"destinationAmount\": \"59\",\n//   \"exchangeRateAmount\": \"0.0098\",\n//   \"exhangeRateId\": \"e99016e65ce84623b88f5eda8ffd92e8\",\n//   \"multiplier\": \"0.0098\",\n//   \"sourceWalletId\": \"235\",\n//   \"transactionPin\": \"2345\",\n//    \"isNegotiated\": false,\n//   \"negotiatedRate\": 0.0100,\n//   \"FromAccountNumber\": \"{{accountNumber}}\",\n//   \"ToAccountNumber\": \"0000087157\",\n//   \"TransactionReference\": \"{{$randomBankAccount}}1647NGN2USD261384\"\n// }\n\n// {\n//   \"Fee\": 100,\n//   \"Amount\": 78.55,\n//   \"FxRate\": 0.0785545954438334642576590731,\n//   \"Remarks\": \"Debit KES78.55 into 0000045685 [+KES999.9415] |Ferrry Den|0000045685|Rove10\",\n//   \"Currency\": 154,\n//   \"Direction\": null,\n//   \"ProductId\": \"7\",\n//   \"AccountNumber\": null,\n//   \"BatchReference\": null,\n//   \"ToAccountNumber\": \"0000045685\",\n//   \"TargetCurrencyId\": 1,\n//   \"FromAccountNumber\": \"0000190107\",\n//   \"TransactionReference\": \"241002141352KES2NGN057414\"\n// }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "https://wallet-dev.bank78.co/api/v1/multicurrency/transfer"
									},
									"response": []
								},
								{
									"name": "Fx NGN - USD Convert",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e4ec5b97-a786-4067-88b0-5d8e93ffaaba",
												"exec": [
													"pm.test(\"Response status code is 200\", function () {",
													"  pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Content-Type header is application/json\", function () {",
													"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
													"});",
													"",
													"",
													"pm.test(\"Response has the required fields - code, success, message, and data\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData.code).to.exist;",
													"    pm.expect(responseData.success).to.exist;",
													"    pm.expect(responseData.message).to.exist;",
													"    pm.expect(responseData.data).to.exist;",
													"});",
													"",
													"",
													"pm.test(\"Data object contains the expected fields - status and message\", function () {",
													"  const responseData = pm.response.json();",
													"",
													"  pm.expect(responseData).to.be.an('object');",
													"  pm.expect(responseData.data).to.exist.and.to.be.an('object');",
													"  pm.expect(responseData.data).to.have.property('status');",
													"  pm.expect(responseData.data).to.have.property('message');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "a1f12e7b-2f73-45c1-bae8-e74452173baa",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "x-api-key",
												"value": "SK-sdyviR0yfjGtNppimytqkX6Y7lJqDNWw5NdPHCK8hYjpqk8oM0Adn4hoBHEsDUWqRgm",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"FromAccountNumber\": \"0000079653\", //NGN\n    \"ToAccountNumber\": \"0000079725\", //USD\n    \"Fee\": \"10\",\n    \"ProductId\": \"263\",\n    \"TransactionReference\": \"Ref-Buying USD 1647NGN2USD261384 {{$randomBankAccount}}\",\n    \"BatchReference\": \"Ref- Buying USD 1647NGN2USD261387{{$randomBankAccount}}\",\n    \"Amount\": \"100\",\n    \"Remarks\": \"NGN-USD\",\n    \"BranchCode\": \"999\",\n    \"TransactionTypeId\": \"\",\n    \"FxRate\": \"1600\",\n    \"OrganizationId\": \"23\",\n    \"targetCurrencyId\": 107\n}\n\n// {\n//  \"Fee\": 0,\n//  \"Amount\": 15,\n//  \"FxRate\": null,\n//  \"Remarks\": \"Debit NGN23809.52380952381 into 0000045692 [+NGN15.0000000000000003] |Ferrry Den|0000045692|Rove10\",\n//  \"Currency\": 125,\n//  \"Direction\": \"C\",\n//  \"AccountNumber\": null,\n//  \"BatchReference\": null,\n//  \"ToAccountNumber\": \"2330004231\",\n//  \"FromAccountNumber\": \"0000044860\",\n//  \"TransactionReference\": \"{{$randomBankAccount}}1647NGN2USD261384\"\n// }\n\n// {\n//   \"amount\": \"6000\",\n//   \"beneficiaryCurrency\": \"GHS\",\n//   \"beneficiaryId\":\"944\",\n//   \"destinationAmount\": \"59\",\n//   \"exchangeRateAmount\": \"0.0098\",\n//   \"exhangeRateId\": \"e99016e65ce84623b88f5eda8ffd92e8\",\n//   \"multiplier\": \"0.0098\",\n//   \"sourceWalletId\": \"235\",\n//   \"transactionPin\": \"2345\",\n//    \"isNegotiated\": false,\n//   \"negotiatedRate\": 0.0100,\n//   \"FromAccountNumber\": \"{{accountNumber}}\",\n//   \"ToAccountNumber\": \"0000087157\",\n//   \"TransactionReference\": \"{{$randomBankAccount}}1647NGN2USD261384\"\n// }\n\n// {\n//   \"Fee\": 100,\n//   \"Amount\": 78.55,\n//   \"FxRate\": 0.0785545954438334642576590731,\n//   \"Remarks\": \"Debit KES78.55 into 0000045685 [+KES999.9415] |Ferrry Den|0000045685|Rove10\",\n//   \"Currency\": 154,\n//   \"Direction\": null,\n//   \"ProductId\": \"7\",\n//   \"AccountNumber\": null,\n//   \"BatchReference\": null,\n//   \"ToAccountNumber\": \"0000045685\",\n//   \"TargetCurrencyId\": 1,\n//   \"FromAccountNumber\": \"0000190107\",\n//   \"TransactionReference\": \"241002141352KES2NGN057414\"\n// }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "https://wallet-dev.bank78.co/api/v1/multicurrency/transfer"
									},
									"response": []
								},
								{
									"name": "Fx USD - USD External",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e4ec5b97-a786-4067-88b0-5d8e93ffaaba",
												"exec": [
													"pm.test(\"Response status code is 200\", function () {",
													"  pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Content-Type header is application/json\", function () {",
													"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
													"});",
													"",
													"",
													"pm.test(\"Response has the required fields - code, success, message, and data\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData.code).to.exist;",
													"    pm.expect(responseData.success).to.exist;",
													"    pm.expect(responseData.message).to.exist;",
													"    pm.expect(responseData.data).to.exist;",
													"});",
													"",
													"",
													"pm.test(\"Data object contains the expected fields - status and message\", function () {",
													"  const responseData = pm.response.json();",
													"",
													"  pm.expect(responseData).to.be.an('object');",
													"  pm.expect(responseData.data).to.exist.and.to.be.an('object');",
													"  pm.expect(responseData.data).to.have.property('status');",
													"  pm.expect(responseData.data).to.have.property('message');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "dbdc50e0-5fbd-4621-b8ba-981aa856a4f6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "x-api-key",
												"value": "SK-sdyviR0yfjGtNppimytqkX6Y7lJqDNWw5NdPHCK8hYjpqk8oM0Adn4hoBHEsDUWqRgm",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"FromAccountNumber\": \"0000079086\", //Paga\n    \"ToAccountNumber\": \"00000001232\", // external\n    \"Fee\": \"10\",\n    \"ProductId\": \"300\",\n    \"TransactionReference\": \"Transfer between USD - USD 1647NGN2USD261384 {{$randomBankAccount}}\",\n    \"BatchReference\": \"Transfer between USD - USD 1647NGN2USD261387{{$randomBankAccount}}\",\n    \"Amount\": \"100\",\n    \"Remarks\": \"USD-USD External\",\n    \"BranchCode\": \"999\",\n    \"TransactionTypeId\": \"\",\n    \"FxRate\": \"\",\n    \"OrganizationId\": \"23\",\n    \"targetCurrencyId\": \"\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "https://wallet-dev.bank78.co/api/v1/multicurrency/transfer"
									},
									"response": []
								}
							],
							"id": "435aee5d-c1d1-4225-a030-abcc072b9e05"
						},
						{
							"name": "Chart Of Account",
							"item": [
								{
									"name": "Create Account",
									"item": [
										{
											"name": "Create Chart Of Account",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "36622c85-1e65-4895-ab33-c45d79afb198",
														"exec": [
															"pm.test(\"Response status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"",
															"pm.test(\"Response has the required fields - code, success, message, and data\", function () {",
															"    const responseData = pm.response.json();",
															"    ",
															"    pm.expect(responseData).to.be.an('object');",
															"    pm.expect(responseData.code).to.exist;",
															"    pm.expect(responseData.success).to.exist;",
															"    pm.expect(responseData.message).to.exist;",
															"    pm.expect(responseData.data).to.exist;",
															"});",
															"",
															"",
															"pm.test(\"Validate the data object\", function () {",
															"  const responseData = pm.response.json();",
															"  ",
															"  pm.expect(responseData).to.be.an('object');",
															"  pm.expect(responseData.data).to.be.an('object');",
															"  pm.expect(responseData.data.id).to.be.a('number').and.to.be.at.least(0);",
															"  pm.expect(responseData.data.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
															"  pm.expect(responseData.data.walletGroupFeatureDto).to.satisfy((value) => value === null || typeof value === 'object');",
															"});",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "4d375dfc-4be8-478d-bdfa-231e502ebf82",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"{{$randomFirstName}} Charges\",\n    \"walletGroupFeatureDto\": [\n        {\n            \"featureName\": \"VaultCharge\",\n            \"featurePropertyName\": \"Threshold\",\n            \"featurePropertyValue\": \"5\"\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/walletgroups/add"
											},
											"response": []
										},
										{
											"name": "Create Chart Of Account - Empty Name Field",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "36622c85-1e65-4895-ab33-c45d79afb198",
														"exec": [
															"const jsonData = pm.response.json();",
															"",
															"pm.test(\"Response status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body contains message\", function (){",
															"    pm.expect(typeof jsonData.message).to.eql(\"string\", \"Wallet group name is required\")",
															"})",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "0e1517ff-4248-45de-819c-42a5920dcf51",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"\",\n    \"walletGroupFeatureDto\": [\n        {\n            \"featureName\": \"VaultCharge\",\n            \"featurePropertyName\": \"Threshold\",\n            \"featurePropertyValue\": \"5\"\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/walletgroups/add"
											},
											"response": []
										}
									],
									"id": "e144ef14-c5ef-4d3a-8978-11811a389e54"
								},
								{
									"name": "Get Account Type",
									"item": [
										{
											"name": "Get Account Types",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d16ffb61-cf12-4e43-bb3a-7184dea5ec06",
														"exec": [
															"pm.test(\"Response status code is 200\", function () {",
															"  pm.response.to.have.status(200);",
															"});",
															"",
															"",
															"pm.test(\"Response has the required fields\", function () {",
															"    const responseData = pm.response.json();",
															"    ",
															"    pm.expect(responseData).to.be.an('object');",
															"    pm.expect(responseData.code).to.exist;",
															"    pm.expect(responseData.success).to.exist;",
															"    pm.expect(responseData.message).to.exist;",
															"    pm.expect(responseData.data).to.exist;",
															"});",
															"",
															"",
															"pm.test(\"Validate the data object and its properties\", function () {",
															"    const responseData = pm.response.json();",
															"    ",
															"    pm.expect(responseData.data[0]).to.be.an('object');",
															"    pm.expect(responseData.data[0].id).to.exist.and.to.be.a('number');",
															"    pm.expect(responseData.data[0].name).to.exist.and.to.be.a('string');",
															"    pm.expect(responseData.data[0].walletGroupFeatureDto).to.exist.and.to.be.an('array');",
															"});",
															"",
															"",
															"pm.test(\"Ensure walletGroupFeatureDto contains expected properties\", function () {",
															"    const responseData = pm.response.json();",
															"    ",
															"    pm.expect(responseData.data).to.be.an('array').that.is.not.empty;",
															"    ",
															"    responseData.data.forEach(function(walletGroup) {",
															"        walletGroup.walletGroupFeatureDto.forEach(function(feature) {",
															"            pm.expect(feature).to.have.property('featureName');",
															"            pm.expect(feature).to.have.property('featurePropertyName');",
															"            pm.expect(feature).to.have.property('featurePropertyValue');",
															"        });",
															"    });",
															"});",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "a2dd7a71-97ff-4875-9f24-7fa94ec435f1",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"url": "{{baseUrl}}/api/v1/walletgroups/get"
											},
											"response": []
										}
									],
									"id": "ee0bd576-e8c8-4dfc-a253-a128b35bf6ef"
								},
								{
									"name": "Get Account Type ID",
									"item": [
										{
											"name": "Get Account Type By ID",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a4320eed-cb27-44cf-9f65-4a18131340ab",
														"exec": [
															"pm.test(\"Response status code is 200\", function () {",
															"  pm.response.to.have.status(200);",
															"});",
															"",
															"",
															"pm.test(\"Response has the required fields\", function () {",
															"    const responseData = pm.response.json();",
															"    ",
															"    pm.expect(responseData).to.be.an('object');",
															"    pm.expect(responseData.code).to.exist;",
															"    pm.expect(responseData.success).to.exist;",
															"    pm.expect(responseData.message).to.exist;",
															"    pm.expect(responseData.data).to.exist;",
															"});",
															"",
															"",
															"pm.test(\"Validate the data object and its properties\", function () {",
															"    const responseData = pm.response.json();",
															"    ",
															"    pm.expect(responseData.data).to.be.an('object');",
															"    pm.expect(responseData.data.id).to.exist.and.to.be.a('number');",
															"    pm.expect(responseData.data.name).to.exist.and.to.be.a('string');",
															"    pm.expect(responseData.data.walletGroupFeatureDto).to.exist.and.to.be.an('array');",
															"});",
															"",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "0b32c97a-9260-4cb8-b31e-45f9e657f5df",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/walletgroups/get/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"walletgroups",
														"get",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "32"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Account Type By ID - Invalid ID",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a4320eed-cb27-44cf-9f65-4a18131340ab",
														"exec": [
															"const jsonData = pm.response.json();",
															"",
															"pm.test(\"Response status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body contains message\", function (){",
															"    pm.expect(typeof jsonData.message).to.eql(\"string\", \"Wallet group was not found\")",
															"})",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "8c737ddc-7968-44a8-aa3d-a7f34444f923",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/walletgroups/get/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"walletgroups",
														"get",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "320"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "9a26d47a-69bf-4df1-a681-56f54db79723"
								},
								{
									"name": "Add Feature To Account",
									"item": [
										{
											"name": "Add Features To Account Type",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ceefaa01-f513-44d0-8ea0-89cf56ca83bd",
														"exec": [
															"const jsonData = pm.response.json();",
															"",
															"pm.test(\"Response status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Body contains message\", function (){",
															"    pm.expect(typeof jsonData.message).to.eql(\"string\", \"Added Successfully\")",
															"})",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "de83092a-2d9e-47d8-8570-1d42004c2c02",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"groupId\": 32, // Account type (EUR Account)\n    \"featureId\": 52, // Vault Charge\n    \"param1\": 6.5, // Interest rate\n    \"param2\": 10 //  maximum withdrawal\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/walletgroups/feature/add"
											},
											"response": []
										},
										{
											"name": "Add Features To Account Type - Invalid GroupId",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ceefaa01-f513-44d0-8ea0-89cf56ca83bd",
														"exec": [
															"const jsonData = pm.response.json();",
															"",
															"pm.test(\"Response status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body contains message\", function (){",
															"    pm.expect(typeof jsonData.message).to.eql(\"string\", \"The wallet group  you have specified does not exist\")",
															"})",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "e9b5604f-3f8e-4d76-b689-2c72bd921c94",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"groupId\": 320, // Account type (EUR Account)\n    \"featureId\": 52, // Vault Charge\n    \"param1\": 6.5, // Interest rate\n    \"param2\": 10 //  maximum withdrawal\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/walletgroups/feature/add"
											},
											"response": []
										},
										{
											"name": "Add Features To Account Type - Invalid FeatureId",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ceefaa01-f513-44d0-8ea0-89cf56ca83bd",
														"exec": [
															"const jsonData = pm.response.json();",
															"",
															"pm.test(\"Response status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body contains message\", function (){",
															"    pm.expect(typeof jsonData.message).to.eql(\"string\", \"The wallet feature you have specified does not exist\")",
															"})",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "c00de331-eaf5-463d-a0a8-7d389cbf045a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"groupId\": 32, // Account type (EUR Account)\n    \"featureId\": 520, // Vault Charge\n    \"param1\": 6.5, // Interest rate\n    \"param2\": 10 //  maximum withdrawal\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/walletgroups/feature/add"
											},
											"response": []
										}
									],
									"id": "f70bfa7a-5dcf-49d2-addc-0a5b9fcf07fa"
								},
								{
									"name": "Add Wallet To Account",
									"id": "c873c743-7933-4c35-9217-ab632bf22db1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/walletgroups/:id/wallet/:walletId/add",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"walletgroups",
												":id",
												"wallet",
												":walletId",
												"add"
											],
											"variable": [
												{
													"key": "id",
													"value": "32"
												},
												{
													"key": "walletId",
													"value": "8358"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Account Type Feature",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5d21b5eb-f07d-4a36-9f92-b9355d5db519",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Body contains message\", function (){",
													"    pm.expect(typeof jsonData.message).to.eql(\"string\", \"Retrieved Successfully\")",
													"})",
													"",
													"pm.test(\"Body contains meta data\", function (){",
													"    pm.expect(typeof jsonData.data).to.eql(\"object\")",
													"})"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "eba30a14-fab6-46c2-95f9-555f347fe40b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": "{{baseUrl}}/api/v1/walletgroups/walletfeatures/get"
									},
									"response": []
								}
							],
							"id": "dd1a849f-ae11-4f4a-80d1-3504649beef7"
						},
						{
							"name": "EOD",
							"item": [
								{
									"name": "EOD",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b69dc5ae-299c-42f4-ab68-982ce9de4391",
												"exec": [
													"pm.test(\"Response status code is 200\", function () {",
													"  pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Content-Type header is application/json\", function () {",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
													"});",
													"",
													"",
													"pm.test(\"Response has the required fields - code, success, message, and data\", function () {",
													"  const responseData = pm.response.json();",
													"  ",
													"  pm.expect(responseData).to.be.an('object');",
													"  pm.expect(responseData.code).to.exist;",
													"  pm.expect(responseData.success).to.exist;",
													"  pm.expect(responseData.message).to.exist;",
													"  pm.expect(responseData.data).to.exist;",
													"});",
													"",
													"",
													"pm.test(\"Validate the schema of the data object - status and message properties\", function () {",
													"  const responseData = pm.response.json();",
													"",
													"  pm.expect(responseData).to.be.an('object');",
													"  pm.expect(responseData.data).to.exist.and.to.be.an('object');",
													"  pm.expect(responseData.data.status).to.exist.and.to.be.a('number');",
													"  pm.expect(responseData.data.message).to.exist.and.to.be.a('string');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "334b4f05-eae6-4bbc-aa80-c807b5357bf7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/wallets/end-of-day/branch/:branchCode",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"wallets",
												"end-of-day",
												"branch",
												":branchCode"
											],
											"variable": [
												{
													"id": "9fc8557f-1985-45fd-8e64-9a769e0d3d32",
													"key": "branchCode",
													"value": "999"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "81ef7529-b38a-4c41-80be-d8849cf737ce"
						}
					],
					"id": "569f7105-2da3-4adb-a031-7cfaf98bf166"
				}
			],
			"id": "87ade3bf-d704-4eae-a90f-e2b96b375c3c"
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": {
			"value": "{{api-key}}",
			"key": "x-api-key",
			"in": "header"
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "3ee1dc3b-2148-46e3-b061-336931128677",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "e90b04ad-31be-4a25-b3f1-c486e663dee0",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://wallet-dev.bank78.co",
			"disabled": true
		},
		{
			"key": "api-key",
			"value": "SK-tAsPts2rqBXKkL92V2cL8CC1jppzYDUFc2P96QCRLse4i2O2WwOocWAHI2hgPw2DwdW",
			"type": "string",
			"disabled": true
		},
		{
			"key": "api-key",
			"value": "SK-sdyviR0yfjGtNppimytqkX6Y7lJqDNWw5NdPHCK8hYjpqk8oM0Adn4hoBHEsDUWqRgm",
			"type": "string",
			"disabled": true
		},
		{
			"key": "baseUrl",
			"value": "https://kore78-dev.bank78.co",
			"type": "string"
		},
		{
			"key": "api-key",
			"value": "SK-lXtqycpN0aJS08AL9VwpXiwlPP7dq3kIFRTp0BEjreDRnZdJxVIFjyAch7aZpuN4z8S",
			"type": "string",
			"disabled": true
		},
		{
			"key": "Api-key",
			"value": "SK-sdyviR0yfjGtNppimytqkX6Y7lJqDNWw5NdPHCK8hYjpqk8oM0Adn4hoBHEsDUWqRgm",
			"type": "string",
			"disabled": true
		},
		{
			"key": "accessToken",
			"value": ""
		},
		{
			"key": "roleId",
			"value": ""
		},
		{
			"key": "branchCode",
			"value": ""
		},
		{
			"key": "customerId",
			"value": ""
		},
		{
			"key": "permissionId",
			"value": ""
		},
		{
			"key": "permissionName",
			"value": ""
		},
		{
			"key": "roleName",
			"value": ""
		},
		{
			"key": "permissionName1",
			"value": ""
		},
		{
			"key": "permissionName2",
			"value": ""
		},
		{
			"key": "emailAddress",
			"value": ""
		},
		{
			"key": "productId",
			"value": ""
		},
		{
			"key": "productId_1",
			"value": ""
		},
		{
			"key": "branchId",
			"value": ""
		},
		{
			"key": "accountNumber",
			"value": ""
		},
		{
			"key": "accountNumber1",
			"value": ""
		},
		{
			"key": "ApiKey",
			"value": "SK-M13eNvwIqSauPDRrgynqXA88TEuw2f3GymuUQ3VURSjOpOUUe17XdqH92oygmtEr6tv",
			"type": "string",
			"disabled": true
		},
		{
			"key": "accountNumberGHS",
			"value": ""
		},
		{
			"key": "AdminTest",
			"value": "AdminTest",
			"type": "string",
			"disabled": true
		},
		{
			"key": "api-key",
			"value": "SK-G1JLmVYUyG3QEN4ghcTNZ4kWVy0Rz6dHIKGY9NcMKkH41yiuEZBdVT4mkNWVEyhYPX3",
			"type": "string"
		}
	]
}